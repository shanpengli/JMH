u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
time2 <- proc.time()
time2 - time1
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
source("~/Desktop/GSR CODES/2022/2022 summer/Accord_DP/GetBiasCP_DP.R")
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.6, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95)
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
HorizonTimePred$`4`$Risk1$Bias
HorizonTimePred$`4`$Risk1$CP
a$ParaMatrixRaw[[1]]$pred1
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
HorizonTimePred$`4`$Risk1$Bias
load("~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/oldresult/sim500Nt200Nq15M500Nv500Incre0.25.Rdata")
source("~/Desktop/GSR CODES/2022/2022 summer/Accord_DP/GetBiasCP_DP.R")
HorizonTimePred <- GetBiasCP_DP(sim = 500, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
HorizonTimePred$`4`$Risk1$Bias[1:10]
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a$TrueP1ik
a$ParaMatrixRaw[[2]]$pred1$`1`
a$ParaMatrixRaw[[2]]$pred1$`14`
a$ParaMatrixRaw[[2]]$pred1$`37`
a$ParaMatrixRaw[[2]]$pred1$`1`
data <- simJMdataRI(seed = 100, N =500, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$cdata
fit$ydata
devtools::load_all()
View(ydata)
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
fit$ydata[1:20, ]
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit$Pred$`714`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 2 failure`
View(cdata2)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit$Pred$`714`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 1 failure`
survfit
devtools::load_all()
survfit
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
time2 <- proc.time()
time2 - time1
a$TrueP1ik[1:20, ]
a$TrueP1ik[1:5, ]
a$ParaMatrixRaw[[2]]$pred1$`1`
a$ParaMatrixRaw[[2]]$pred1$`3`
a$ParaMatrixRaw[[2]]$pred1$`8`
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
HorizonTimePred$`4`$Risk1$Bias
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
devtools::load_all()
devtools::load_all()
data <- simJMdataRI(seed = 100, N =500, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
install.packages("devtools")
devtools::load_all()
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N =1000, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$EFuntheta$FUNEC
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
View(cdata2)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
View(fit)
devtools::load_all()
devtools::load_all()
data <- simJMdataRI(seed = 100, N =100, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data(ydata)
data(cdata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N =100, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
View(cdata)
cdata2 <- cdata[cdata$ID %in% c(77, 48), ]
ydata2 <- ydata[ydata$ID %in% c(77, 48), ]
View(cdata2)
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 3.5, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
devtools::document()
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 3.5, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 3.5, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
cdata2 <- cdata[cdata$ID %in% c(42, 48), ]
ydata2 <- ydata[ydata$ID %in% c(42, 48), ]
cdata2 <- cdata[cdata$ID %in% c(42, 48), ]
ydata2 <- ydata[ydata$ID %in% c(42, 48), ]
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 4, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 4, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
data <- simJMdataRI(seed = 100, N = 200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 4, by = 0.5), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
H01 <- fit$H01
View(H01)
devtools::load_all()
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
survfit2$Pred$`42`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
survfit2
survfit2$Pred$`42`$`Cumulative incidence probabilities for type 1 failure`
f.CR <- function (d, t) {
a <- matrix(0, nrow = 1, ncol = 5)
a[1, 1] <- t
a <- as.data.frame(a)
colnames(a) <- colnames(d[[1]])
for (i in 1:2) {
d[[i]] <- rbind(a, d[[i]])
}
d
}
mapply(f.CR, survfit2$Pred, survfit2$Last.time[, 2], SIMPLIFY = FALSE)
survfit2$Pred[[1]]
devtools::load_all()
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
devtools::load_all()
data <- simJMdataRI(seed = 1034, N = 500, lambda1 = 0.05,
lambda2 = 0.1,
CL = 2,
CU = 10,
increment = 0.25)
cdata <- data$cdata
ydata <- data$ydata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
a <- GetFraminghamScore(cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = seq(4, 6, by = 1), M = 500,
ytime = "time",
quadpoint = 15, quant.width = 0.25)
a$AllCIF1$`4`
a$AllCIF1$`5`
a$AllCIF1$`6`
devtools::load_all()
a <- GetFraminghamScore(cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = seq(4, 6, by = 1), M = 50,
ytime = "time",
quadpoint = 15, quant.width = 0.25)
a$AllCIF1$`4`
a$AllCIF1$`5`
a$AllCIF1$`6`
a$AllCIF2$`4`
a$AllCIF2$`5`
a$AllCIF2$`6`
View(H01)
floor(4.6)
?floor
ceiling(5.6)
ceiling(5.1)
devtools::load_all()
a <- GetFraminghamScore(cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = NULL, M = 50,
ytime = "time",
quadpoint = 15, quant.width = 0.25)
length(3)
devtools::load_all()
a <- GetFraminghamScore(cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = NULL, M = 50,
ytime = "time",
quadpoint = 15, quant.width = 0.25)
a$AllCIF1$`7`
a$AllCIF1$`8`
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
a <- GetFraminghamScore(object = fit, cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = NULL, M = 50,
ytime = "time",
quadpoint = 15, quant.width = 0.2)
a$AllCIF1$`7`
a$AllCIF1$`8`
a$AllCIF2$`8`
devtools::load_all()
devtools::document()
knitr::opts_chunk$set(echo = TRUE)
load("~/Desktop/GSR CODES/2021/2021 summer/ACCORD/ALLdeath.RData")
rm(list= ls()[!(ls() %in% c('otherlabsfpg','keyvariable',
'hba1cBaseline', 'cdataoutcome', 'hba1c', "ydata", "cdata"))])
load("~/Desktop/GSR CODES/2021/2021 summer/ACCORD/ALLdeath.RData")
rm(list= ls()[!(ls() %in% c("ydata", "cdata"))])
## split the dataset
set.seed(100)
split <- sample(c(rep(0, 0.8 * nrow(cdata)), rep(1, 0.2 * nrow(cdata))))
round(0.8*nrow(cdata))
?sample
## split the dataset
set.seed(100)
split <- sample(c(rep(0, round(0.8*nrow(cdata))), rep(1, round(0.2*nrow(cdata)))))
head(split)
## split the dataset
set.seed(100)
split <- sample(c(rep(0, round(0.8*nrow(cdata))), rep(1, round(0.2*nrow(cdata)))))
cdata.train <- cdata[split == 0, ]
## split the dataset
set.seed(100)
split <- sample(c(rep(0, round(0.8*nrow(cdata))), rep(1, round(0.2*nrow(cdata)))))
cdata.train <- cdata[split == 0, ]
ydata.train <- ydata[ydata$MaskID %in% cdata.train$MaskID, ]
View(ydata.train)
## split the dataset
set.seed(100)
split <- sample(c(rep(0, round(0.8*nrow(cdata))), rep(1, round(0.2*nrow(cdata)))))
cdata.train <- cdata[split == 0, ]
ydata.train <- ydata[ydata$MaskID %in% cdata.train$MaskID, ]
cdata.test <- cdata[split == 1, ]
ydata.test <- ydata[ydata$MaskID %in% cdata.test$MaskID, ]
View(ydata.test)
devtools::load_all()
data <- simJMdataRI(seed = 1034, N = 500, lambda1 = 0.05,
lambda2 = 0.1,
CL = 2,
CU = 10,
increment = 0.25)
cdata <- data$cdata
ydata <- data$ydata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
a <- GetFraminghamScore(object = fit, cdata = cdata, ydata = ydata, survtime = "survtime",
increment = 0.25, status = "cmprsk", ID = "ID",
LandmarkTime = 3, u = NULL, M = 50,
ytime = "time",
quadpoint = 15, quant.width = 0.2)
devtools::load_all()
