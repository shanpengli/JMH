long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 5e-3,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/bootsfitRIhomo.R")
a <- bootsfitRIhomo(1)
a <- bootsfitRIhomo(1, N = 500)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/bootsfitRIhomo.R")
a <- bootsfitRIhomo(1, N = 500)
a
document()
install()
library(JMH)
a <- simfitRIhomo(5, N = 500, ncores = 5)
### homogeneity assumption holds
N2000RIhomo <- JMH::simfitRIhomo(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 11)
install()
library(JMH)
### homogeneity assumption holds
N2000RIhomo <- JMH::simfitRIhomo(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 11)
library(JMH)
### homogeneity assumption holds
N2000RIhomo <- JMH::simfitRIhomo(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 11)
debug(simfitRIhomo)
### homogeneity assumption holds
N2000RIhomo <- JMH::simfitRIhomo(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 11)
i = 1
paramatrix[i, ] <- ParaMatrixRaw[[i]]$coef
paramatrixSE[i, ] <- ParaMatrixRaw[[i]]$coefSE
i = 34
paramatrix[i, ] <- ParaMatrixRaw[[i]]$coef
paramatrixSE[i, ] <- ParaMatrixRaw[[i]]$coefSE
i = 100
paramatrix[i, ] <- ParaMatrixRaw[[i]]$coef
paramatrixSE[i, ] <- ParaMatrixRaw[[i]]$coefSE
i = 500
paramatrix[i, ] <- ParaMatrixRaw[[i]]$coef
paramatrixSE[i, ] <- ParaMatrixRaw[[i]]$coefSE
length(ParaMatrixRaw)
for (i in 1:sim) {
paramatrix[i, ] <- ParaMatrixRaw[[i]]$coef
paramatrixSE[i, ] <- ParaMatrixRaw[[i]]$coefSE
}
for (i in 1:sim) {
a <- try(ParaMatrixRaw[[i]]$coef, silent = TRUE)
if ('try-error' %in% class(a)) {
paramatrix[i, ] <- NA
} else {
paramatrix[i, ] <- a
}
}
View(paramatrix)
ParaMatrixRaw[[144]]$coef
test <- bootsfitRIhomo(82, N = 200, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6)
test <- bootsfitRIhomo(82, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6)
test <- bootsfitRIhomo(84, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6)
debug(bootsfitRIhomo)
test <- bootsfitRIhomo(84, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6)
fit
install()
### homogeneity assumption holds
N2000RIhomo <- JMH::simfitRIhomo(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
sigb = 0.5,
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 11)
save.image("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/SimData/JMHhomoSimN=2000.RData")
library(JMH)
### rho = 0.5
N10000q6RIrho0.5 <- JMH::simfitRI(sim = 500, N = 10000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 7)
### rho = 0.5
N10000q6RIrho0.5 <- JMH::simfitRI(sim = 500, N = 10000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 12)
CP <- Getcoverage(N10000q6RIrho0.5, alpha1 = 0.1, alpha2 = -0.1)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
source("~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R")
N10000q6RIrho0.75 <- JMH::simfitRI(sim = 500, N = 10000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
covbw = matrix(c(0.5, 0.375, 0.375, 0.5), nrow = 2, ncol = 2),
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 12)
CP <- Getcoverage(N10000q6RI, alpha1 = 0.1, alpha2 = -0.1,
Sig = matrix(c(0.5, 0.375, 0.375, 0.5), nrow = 2, ncol = 2))
### rho = 0.25
N10000q6RIrho0.25 <- JMH::simfitRI(sim = 500, N = 10000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
covbw = matrix(c(0.5, 0.125, 0.125, 0.5), nrow = 2, ncol = 2),
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 12)
# CP <- Getcoverage(N10000q6RI, alpha1 = 0.1, alpha2 = -0.1,
#                   Sig = matrix(c(0.5, 0.125, 0.125, 0.5), nrow = 2, ncol = 2))
# a <- cbind(GetbiasVarRI(N10000q6RI, alpha1 = 0.1, alpha2 = -0.1, Sig = c(0.5, 0.5, 0.125)),
#            CP)
### rho = 0
N10000q6RIrho0 <- JMH::simfitRI(sim = 500, N = 10000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
alpha1 = 0.1, alpha2 = -0.1,
CL = 5, CU = 10,
covbw = matrix(c(0.5, 0, 0, 0.5), nrow = 2, ncol = 2),
seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 6, ncores = 12)
save.image("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/SimData/JMHSimN=10000.RData")
CP <- Getcoverage(N10000q6RIrho0.5, alpha1 = 0.1, alpha2 = -0.1)
a <- cbind(GetbiasVarRI(N10000q6RIrho0.5, alpha1 = 0.1, alpha2 = -0.1),
CP)
a
write.csv(a, file = "../SimData/N10000q6RIrho0.5.csv", quote = FALSE, row.names = TRUE)
CP <- Getcoverage(N10000q6RIrho0.75, alpha1 = 0.1, alpha2 = -0.1,
Sig = matrix(c(0.5, 0.375, 0.375, 0.5), nrow = 2, ncol = 2))
a <- cbind(GetbiasVarRI(N10000q6RIrho0.75, alpha1 = 0.1, alpha2 = -0.1, Sig = c(0.5, 0.5, 0.375)),
CP)
a
write.csv(a, file = "../SimData/N10000q6RIrho0.75.csv", quote = FALSE, row.names = TRUE)
CP <- Getcoverage(N10000q6RIrho0.25, alpha1 = 0.1, alpha2 = -0.1,
Sig = matrix(c(0.5, 0.125, 0.125, 0.5), nrow = 2, ncol = 2))
a <- cbind(GetbiasVarRI(N10000q6RIrho0.25, alpha1 = 0.1, alpha2 = -0.1, Sig = c(0.5, 0.5, 0.125)),
CP)
a
write.csv(a, file = "../SimData/N10000q6RIrho0.25.csv", quote = FALSE, row.names = TRUE)
CP <- Getcoverage(N10000q6RIrho0, alpha1 = 0.1, alpha2 = -0.1,
Sig = matrix(c(0.5, 0, 0, 0.5), nrow = 2, ncol = 2))
a <- cbind(GetbiasVarRI(N10000q6RIrho0, alpha1 = 0.1, alpha2 = -0.1, Sig = c(0.5, 0.5, 0)),
CP)
a
write.csv(a, file = "../SimData/N10000q6RIrho0.csv", quote = FALSE, row.names = TRUE)
document()
install()
library(JMH)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMdataRISF.R")
data <- simJMdataRISF(seed = 100, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit20 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE, method = "standard")
library(JMH)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/bootsfitRISF.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMdataRISF.R")
data <- simJMdataRISF(seed = 100, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit20 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE, method = "standard")
install()
library(JMH)
rep(0, 4)
sum(c(0.05, 0.05, 0.05, 0.15, 0.65))
rawni <- sample(c(0:4), 100, replace = TRUE, prob = c(0.05, 0.05, 0.05, 0.15, 0.70))
table(rawni)
?runif
seq(2, 8, by = 2)
library(splines)
time <- seq(2, 8, by = 2)
timebs <- splines::ns(time, df = 2)
timebs
timebs <- as.matrix(splines::ns(time, df = 2))
timebs
timebs[1, 1]
timebs[2, 1]
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 7000)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 7000)
covbw = matrix(c(200, -70, -70, 10, -70, 150, 70, -2, -70,
70, 150, -2, 10, -2, -2, 0.5), nrow = 4, ncol = 4)
covbw
solve(covbw)
eigen(covbw)
covbw = matrix(c(200, -70, -70, 10, -70, 150, 70, -2, -70,
70, 150, -2, 10, -2, -2, 0.7), nrow = 4, ncol = 4)
eigen(covbw)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 8000)
ydata <- data$ydata
cdata <- data$cdata
View(cdata)
data <- simJMMESA(N = 8000, lambda1 = 3e-4, lambda2 = 3.5e-4)
data <- simJMMESA(N = 8000, lambda1 = 3e-5, lambda2 = 3.5e-5)
data <- simJMMESA(N = 8000, lambda1 = 3e-5, lambda2 = 5e-5)
data <- simJMMESA(N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
View(cdata)
View(ydata)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMMESA(seed = 101, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMMESA(seed = 105, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
View(ydata)
hist(cdata$survtime)
hist(cdata$survtime[cdata$cmprsk == 1])
hist(cdata$survtime[cdata$cmprsk == 2])
?rweibull
mean(rexp(1000, rate = 5e-4))
mean(rweibull(1000, shape = 5e-4, scale = 1))
?rexp
mean(rweibull(1000, shape = 1/5e-4, scale = 1))
mean(rweibull(1000, shape = 1/(5e-4), scale = 1))
mean(rweibull(1000, shape = 1, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 1, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 1, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 1, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 2, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 2, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 2, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 0.5, scale = 1/(5e-4)))
mean(rweibull(1000, shape = 0.8, scale = 1/(5e-4)))
hist(rweibull(1000, shape = 0.8, scale = 1/(5e-4)))
hist(rweibull(1000, shape = 0.8, scale = 1/(5e-2)))
hist(rweibull(1000, shape = 0.8, scale = 1/(5e-1)))
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(seed = 105, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(seed = 105, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(seed = 105, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMMESA.R")
data <- simJMMESA(seed = 105, N = 8000, lambda1 = 2e-5, lambda2 = 5e-5)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdataRISF(seed = 100, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit20 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE, method = "standard")
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
install()
library(JMH)
data <- simJMdataRISF(seed = 100, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
fit6
a <- proc.time()
fit20 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE, method = "standard")
b <- proc.time()
fit6
fit20
a <- proc.time()
fit25 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 25, random = ~ 1|ID, print.para = TRUE, method = "standard")
b <- proc.time()
fit25
fit20
fit20
fit25
data <- simJMdataRISF(seed = 101, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRISF(seed = 102, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRISF(seed = 102, N = 5000)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
fit25
data <- simJMdataRISF(seed = 1021, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
a <- proc.time()
fit25 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 25, random = ~ 1|ID, print.para = TRUE, method = "standard")
data <- simJMdataRISF(seed = 10231, N = 500)
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit6 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
fit6
simtest <- simfitRISF(sim = 500, N = 500, lambda1 = 0.05,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.5,
alpha1 = 1,
vee1 = 0.5,
quadpoint = 6,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
ncores = 7)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simfitRISF.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/bootsfitRISF.R")
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/simJMdataRISF.R")
simtest <- simfitRISF(sim = 500, N = 500, lambda1 = 0.05,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.5,
alpha1 = 1,
vee1 = 0.5,
quadpoint = 6,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
ncores = 7)
colMeans(simtest$paramatrix)
simtest2 <- simfitRISF(sim = 500, N = 2000, lambda1 = 0.05,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.5,
alpha1 = 1,
vee1 = 0.5,
quadpoint = 6,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
ncores = 7)
source("~/Desktop/GSR CODES/2023/2023 Fall/JMH_revision1/JMH/R/bootsfitRISF.R")
simtest2 <- simfitRISF(sim = 500, N = 2000, lambda1 = 0.05,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.5,
alpha1 = 1,
vee1 = 0.5,
quadpoint = 6,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
ncores = 7)
colMeans(simtest2$paramatrix)
colMeans(simtest2$paramatrix, na.rm = TRUE)
colMeans(simtest$paramatrix, na.rm = TRUE)
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 5, obs.time = "time",
method = "GH")
debug(survfitJMMLSM)
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
Sigb
getGH <- GetGHmatrix(quadpoint = quadpoint, Sigb = Sigb)
Sig
as.matrix(Sig[1:p1a, 1:p1a])
install()
library(JMH)
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
debug(survfitJMMLSM)
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
getGH <- GetGHmatrix(quadpoint = quadpoint, p1a = p1a)
?AUCJMMLSM
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
y.obs[[j]] <- data.frame(ynewdata[ynewdata[, ID] ==
yID[j], c(obs.time, Yvar[1])])
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
data <- list(Y, X, Z, W, X2, CH01, beta,
tau, gamma1, alpha1, nu1, Sig)
install()
library(JMH)
AUC <- AUCJMMLSM(fit6, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
summary(AUC)
install()
library(JMH)
fit6
library(FastJM)
fitFastjm <- jmcs(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
random = ~ 1|ID, print.para = TRUE)
fitFastjm
fit6
fitFastjm
fit25
fit6
AUCFastJM <- AUCjmcs(fitFastjm, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
?AUCjmcs
?AUCJMMLSM
AUCFastJM <- AUCjmcs(object = fitFastjm, landmark.time = 3, horizon.time = 6, obs.time = "time",
method = "GH")
summary(AUCFastJM)
