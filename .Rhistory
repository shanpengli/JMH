variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 199, nc = 500)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 199, nc = 500)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
data <- SimSYTdataRI(seed = 199, nc = 500)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- SimSYTdataRI(seed = 199, nc = 500, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- SimSYTdataRI(seed = 1979, nc = 500, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1979, nc = 5000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- SimSYTdataRI(seed = 179, nc = 5000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
data <- SimSYTdataRI(seed = 179, nc = 5000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 179, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 179, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
devtools::load_all()
data <- SimSYTdataRI(seed = 179, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
devtools::load_all()
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 179, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
devtools::load_all()
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- SimSYTdataRI(seed = 179, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- SimSYTdataRI(seed = 1799, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
devtools::load_all()
data <- SimSYTdataRI(seed = 1799, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 1799, nc = 1000, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1799, nc = 100, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1799, nc = 200, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1799, nc = 300, n = 1000)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1799, nc = 300, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 1799, nc = 500, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 1799, nc = 500, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 1799, nc = 500, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 1799, nc = 500, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 199, nc = 500, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 199, nc = 1000, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 199, nc = 2000, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 4000, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.2)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
View(Ydata)
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.2, lambda = 0.1)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.2, lambda = 0.05)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.2, lambda = 0.01)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
mean(rexp(100, rate = 0.1))
mean(rexp(100, rate = 0.01))
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.2, lambda = 0.05)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.05, lambda = 0.05)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.05, lambda = 0.05, increment = 1)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.05, lambda = 0.05, increment = 0.5)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
source('~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R')
devtools::load_all()
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, lambdaC = 0.05, lambda = 0.05, increment = 0.5)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.05, lambda = 0.05, increment = 0.5)
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.05, lambda = 0.05, increment = 0.5,
gamma = c(-1, 0.2, 0.6))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.05, lambda = 0.05, increment = 0.5,
gamma = c(-5, 0.2, 0.6))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.005, lambda = 0.01, increment = 0.5,
gamma = c(-5, 0.2, 0.6))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
exp(-5*33)
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.005, lambda = 0.01, increment = 0.5,
gamma = c(-5, 0.2, 0.6),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.005, lambda = 0.1, increment = 0.5,
gamma = c(-5, 0.2, 0.6),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
devtools::load_all()
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 2, phi = 0.7,
lambdaC = 0.005, lambda = 0.1, increment = 0.5,
gamma = c(-0.5, 0.2, 0.6),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ Si + X21 + X22,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
source("~/Desktop/GSR CODES/2022/2022 spring/Code for interval censoring data.R")
data <- SimSYTdataRI(seed = 99, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
taumatrix <- matrix(0, nrow = 100, ncol = 5)
for (i in 1:100) {
print(i)
data <- SimSYTdataRI(seed = 99 + i, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
}
taumatrix <- matrix(0, nrow = 100, ncol = 5)
i = 1
while(i <= 100) {
print(i)
data <- SimSYTdataRI(seed = 99 + i, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) next
else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
}
i <- i + 1
}
i = 1
count <- 1
while(i <= 100) {
data <- SimSYTdataRI(seed = 99 + count, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) next
else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
i <- i + 1
}
count <- count + 1
}
taumatrix <- matrix(0, nrow = 100, ncol = 5)
i = 1
count <- 1
while(i <= 100) {
data <- SimSYTdataRI(seed = 99 + count, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) {
count <- count + 1
} else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
i <- i + 1
}
count <- count + 1
}
taumatrix <- matrix(0, nrow = 100, ncol = 5)
i = 1
count <- 1
while(i <= 100) {
data <- SimSYTdataRI(seed = 99 + count, nc = 2000, n = 500, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) {
count <- count + 1
} else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
i <- i + 1
}
count <- count + 1
}
View(taumatrix)
colMeans(taumatrix)
taumatrix <- matrix(0, nrow = 100, ncol = 5)
i = 1
count <- 1
while(i <= 100) {
data <- SimSYTdataRI(seed = 99 + count, nc = 2000, n = 1000, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) {
count <- count + 1
} else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
i <- i + 1
}
count <- count + 1
}
colMeans(taumatrix)
a <- proc.time()
taumatrix <- matrix(0, nrow = 100, ncol = 5)
i = 1
count <- 1
while(i <= 100) {
data <- SimSYTdataRI(seed = 99 + count, nc = 2000, n = 500, Cint = 10, phi = 0.04,
lambdaC = 0.05, lambda = 0.3, increment = 2,
gamma = c(-0.5, 0.2, -0.1),
eta = c(0.7, 0.1))
Ydata <- data$Ydata
Sdata <- data$Sdata
Tdata <- data$Tdata
fit <- try(JMMLSM(cdata = Tdata, ydata = Ydata,
long.formula = Yij ~ Si + X11 + X12 + tij,
surv.formula = Surv(Ti, status) ~ X21 + X22 + Si,
variance.formula = ~ Si + X11 + X12 + tij, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE), silent = TRUE)
if ('try-error' %in% class(fit)) {
count <- count + 1
} else {
taumatrix[i, ] <- fit$tau
writeLines(paste0(i, " th simulaiton done!"))
i <- i + 1
count <- count + 1
}
}
b <- proc.time()
b - a
devtools::load_all()
devtools::load_all()
install.packages("glmnet")
