labs(title = "Time cost comparison between \n standard estimation methods and improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(ggplot2)
library(ggpubr)
time <- c(0.3, 20.4, 20, 96)
package <- c("FastJM", "joineR", "JMbayes", "JSM")
data <- data.frame(time, package)
a <- ggplot(data = data, aes(x=package, y = time)) +
geom_bar(stat="identity") +
labs(title = "Time cost among the R packages \n for semi-parametric joint modeling in a lung health study",
y = "Time (min)",
x = "Package")
time <- c(7.59, 35.6, 119.4, 6625, 50829)
samplesize <- c(100, 500, 1000, 5000, 10000)
standard <- data.frame(samplesize, time, "Standard")
colnames(standard) <- c("SampleSize", "Time", "Method")
time <- c(0.49, 2.4, 4.63, 24.2, 45.3)
samplesize <- c(100, 500, 1000, 5000, 10000)
improved <- data.frame(samplesize, time, "Improved")
colnames(improved) <- c("SampleSize", "Time", "Method")
data <- rbind(standard, improved)
data$Method <- as.factor(data$Method)
b <- ggplot(data = data, aes(x=SampleSize, y = Time, group = Method)) +
geom_line(aes(color=Method)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "Time cost comparison between \n standard estimation methods and improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(ggplot2)
library(ggpubr)
time <- c(0.3, 20.4, 96)
package <- c("FastJM", "joineR", "JSM")
data <- data.frame(time, package)
a <- ggplot(data = data, aes(x=package, y = time)) +
geom_bar(stat="identity") +
labs(title = "Time cost among the R packages \n for semi-parametric joint modeling in a lung health study",
y = "Time (min)",
x = "Package")
time <- c(7.59, 35.6, 119.4, 6625, 50829)
samplesize <- c(100, 500, 1000, 5000, 10000)
standard <- data.frame(samplesize, time, "Standard")
colnames(standard) <- c("SampleSize", "Time", "Method")
time <- c(0.49, 2.4, 4.63, 24.2, 45.3)
samplesize <- c(100, 500, 1000, 5000, 10000)
improved <- data.frame(samplesize, time, "Improved")
colnames(improved) <- c("SampleSize", "Time", "Method")
data <- rbind(standard, improved)
data$Method <- as.factor(data$Method)
b <- ggplot(data = data, aes(x=SampleSize, y = Time, group = Method)) +
geom_line(aes(color=Method)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "Time cost comparison between \n standard estimation methods and improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(ggplot2)
library(ggpubr)
time <- c(0.3, 20.4, 96)
package <- c("FastJM", "joineR", "JSM")
data <- data.frame(time, package)
a <- ggplot(data = data, aes(x=package, y = time)) +
geom_bar(stat="identity") +
labs(title = "Time cost among the R packages for semi-parametric joint modeling \n in a lung health study (N = 5000)",
y = "Time (min)",
x = "Package")
time <- c(7.59, 35.6, 119.4, 6625, 50829)
samplesize <- c(100, 500, 1000, 5000, 10000)
standard <- data.frame(samplesize, time, "Standard")
colnames(standard) <- c("SampleSize", "Time", "Method")
time <- c(0.49, 2.4, 4.63, 24.2, 45.3)
samplesize <- c(100, 500, 1000, 5000, 10000)
improved <- data.frame(samplesize, time, "Improved")
colnames(improved) <- c("SampleSize", "Time", "Method")
data <- rbind(standard, improved)
data$Method <- as.factor(data$Method)
b <- ggplot(data = data, aes(x=SampleSize, y = Time, group = Method)) +
geom_line(aes(color=Method)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "Time cost comparison between \n standard estimation methods and improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(ggplot2)
library(ggpubr)
time <- c(0.3, 20.4, 96)
package <- c("FastJM", "joineR", "JSM")
data <- data.frame(time, package)
a <- ggplot(data = data, aes(x=package, y = time)) +
geom_bar(stat="identity") +
labs(title = "Time cost among the R packages for \n semi-parametric joint modeling \n in a lung health study (N = 5000)",
y = "Time (min)",
x = "Package")
time <- c(7.59, 35.6, 119.4, 6625, 50829)
samplesize <- c(100, 500, 1000, 5000, 10000)
standard <- data.frame(samplesize, time, "Standard")
colnames(standard) <- c("SampleSize", "Time", "Method")
time <- c(0.49, 2.4, 4.63, 24.2, 45.3)
samplesize <- c(100, 500, 1000, 5000, 10000)
improved <- data.frame(samplesize, time, "Improved")
colnames(improved) <- c("SampleSize", "Time", "Method")
data <- rbind(standard, improved)
data$Method <- as.factor(data$Method)
b <- ggplot(data = data, aes(x=SampleSize, y = Time, group = Method)) +
geom_line(aes(color=Method)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "Time cost comparison between \n standard estimation methods and improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(ggplot2)
library(ggpubr)
time <- c(0.3, 20.4, 96)
package <- c("FastJM", "joineR", "JSM")
data <- data.frame(time, package)
a <- ggplot(data = data, aes(x=package, y = time)) +
geom_bar(stat="identity") +
labs(title = "Time cost among the R packages for \n semi-parametric joint modeling \n in a lung health study (N = 5000)",
y = "Time (min)",
x = "Package")
time <- c(7.59, 35.6, 119.4, 6625, 50829)
samplesize <- c(100, 500, 1000, 5000, 10000)
standard <- data.frame(samplesize, time, "Standard")
colnames(standard) <- c("SampleSize", "Time", "Method")
time <- c(0.49, 2.4, 4.63, 24.2, 45.3)
samplesize <- c(100, 500, 1000, 5000, 10000)
improved <- data.frame(samplesize, time, "Improved")
colnames(improved) <- c("SampleSize", "Time", "Method")
data <- rbind(standard, improved)
data$Method <- as.factor(data$Method)
b <- ggplot(data = data, aes(x=SampleSize, y = Time, group = Method)) +
geom_line(aes(color=Method)) +
scale_x_log10() +
scale_y_log10() +
labs(title = "Time cost comparison between \n the standard estimation methods and the improved ones \n among various sample sizes",
y = "Time (s)",
x = "Sample Size")
ggarrange(a, b)
library(frailtypack)
data("readmission")
a <- frailtyPenal(Surv(time, event) ~ cluster(id) + dukes +
+ charlson + sex + chemo, n.knots = 10, kappa = 1, data = readmission)
newread <- readmission[!duplicated(readmission$id), ]
ref <- coxph(Surv(time, event) ~ dukes +
+ charlson + sex + chemo, data = newread)
id <- as.data.frame(table(readmission$id))
table(id$Freq)
(sum(id$Freq) - 199)/sum(id$Freq)*100
dat <- readmission[readmission$id %in% c(1:2, 4, 8, 9), ]
add <- matrix(6, nrow = 5, ncol = 11)
add[, 1] <- c(1, 2, 4, 8, 9)
add <- as.data.frame(add)
colnames(add) <- colnames(readmission)
dat <- rbind(dat, add)
dat <- dat[order(dat$id, dat$t.stop), ]
dat$id <- ifelse(dat$id == 4, 3,
ifelse(dat$id == 8, 4,
ifelse(dat$id == 9, 5, dat$id)))
dat$event <- ifelse(dat$event == 6, 0,
ifelse(dat$event == 0, 2, dat$event))
library(ggplot2)
ggplot(data = dat, aes(x=t.stop/30, y = factor(id), group = id)) +
geom_line() +
geom_point(shape=factor(dat$event), size = dat$event*2) +
ylab("Subject") +
xlab("The Calendar Time after the Date of Surgery (in months)") +
labs(title = "Readmission Times of 5 Randomly Selceted Patients in a Colorectal Cancer Study")
factor(dat$event)
ggplot(data = dat, aes(x=t.stop/30, y = factor(id), group = id)) +
geom_line() +
geom_point(shape=dat$event*2, size = dat$event*2) +
ylab("Subject") +
xlab("Time after Surgery (months)") +
labs(title = "Readmission Times of 5 random patients in a Colorectal Cancer Study")
View(a)
a <- frailtyPenal(Surv(time, event) ~ cluster(id) + dukes +
+ factor(charlson) + sex + chemo, n.knots = 10, kappa = 1, data = readmission)
View(a)
summary(a)
library(JMbayes)
data(pdc2)
Time <- c(66, 180, 460, 971, 1320, 2940, 4985, 5469, 8218, 14104)
SampleSize <- seq(from = 100, to = 1000, by = 100)
Time <- c(66, 180, 460, 971, 1320, 2940, 4985, 5469, 8218, 14104)
SampleSize <- seq(from = 100, to = 1000, by = 100)
Data <- data.frame(Time, SampleSize)
library(ggplot2)
View(Data)
ggplot(data = Data, aes(Time, SampleSize)) +
geom_line()
ggplot(data = Data, aes(SampleSize, Time)) +
geom_line()
covb <- matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2)
bi <- mvrnorm(n = N, c(0, 0), covb, tol = 1e-6, empirical = FALSE)
View(covb)
library(MASS)
covb <- matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2)
bi <- mvrnorm(n = N, c(0, 0), covb, tol = 1e-6, empirical = FALSE)
covb <- matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2)
bi <- mvrnorm(n = 20, c(0, 0), covb, tol = 1e-6, empirical = FALSE)
View(bi)
log.lklh.poisson <- function(x, lambda){
-sum(x * log(lambda) - log(factorial(x)) - lambda)
}
x<- rnorm(10000, mean = 0, sd = 7)
optim(par = 2, log.lklh.poisson, x = x)
x<- rnorm(10000, mean = 100, sd = 7)
optim(par = 2, log.lklh.poisson, x = x)
optimize(par = 2, log.lklh.poisson, x = x)
optim(par = 2, log.lklh.poisson, x = x)
xx <- sum(x * log(2) - log(factorial(x)) - 2)
optim(par = 2, log.lklh.poisson, x = x, method = "CG")
lambda <- 100.0593
-sum(x * log(lambda) - log(factorial(x)) - lambda)
lambda <- 10.0593
-sum(x * log(lambda) - log(factorial(x)) - lambda)
lambda <- 333
-sum(x * log(lambda) - log(factorial(x)) - lambda)
load("~/Desktop/GSR CODES/2020/2020 Fall/lung/RealdataAllpackages.RData")
View(ydata)
ydata$Gender <- ifelse(ydata$Gender == 0, "Female", "Male")
View(ydata)
rm(list=setdiff(ls(), "ydata"))
Female <- ydata[ydata$Gender == "Female", ]
Male <- ydata[ydata$Gender == "Male", ]
MaleID <- unique(Male$ID)
set.seed(100)
MaleID <- unique(Male$ID)
samplemaleID <- sample(MaleID, 50)
set.seed(100)
MaleID <- unique(Male$ID)
samplemaleID <- sample(MaleID, 50, replace = FALSE)
length(samplemaleID)
FemaleID <- unique(Female$ID)
sampleFemaleID <- sample(FemaleID, 50, replace = FALSE)
TotalID <- c(samplemaleID, sampleFemaleID)
submale <- ydata[ydata$ID %in% samplemaleID, ]
subFemale <- ydata[ydata$ID %in% sampleFemaleID, ]
View(subFemale)
View(submale)
subydata <- rbind(submale, subFemale)
View(ydata)
library(lattice)
xyplot(fpmacc ~ Time | Gender, group = ID, data = subydata,
type = "l", xlab = "Visit time", ylab = "fpmacc",
main="Profile plots of fpmacc for 50 male and 50 female patients")
xyplot(fpmacc ~ Time | Gender, group = ID, data = subydata,
type = "l", xlab = "Visit time", ylab = "fpmacc")
xyplot(fpmacc ~ Time | Gender, group = ID, data = subydata,
type = "l", xlab = "Visit time", ylab = "FEV")
xyplot(fpmacc ~ Time | Gender, group = ID, data = subydata,
type = "l", xlab = "Visit time", ylab = "FEV", col = "darkgray")
rm(list = ls())
load("~/Desktop/GSR CODES/2020/2020 Fall/PrimaryCareData/Data.RData")
View(tdept_nmNomissing)
set.seed(100)
Female <- ydata[tdept_nmNomissing$SEX == "Female", ]
Male <- ydata[tdept_nmNomissing$SEX == "Male", ]
MaleID <- unique(Male$ID)
samplemaleID <- sample(MaleID, 50, replace = FALSE)
FemaleID <- unique(Female$ID)
sampleFemaleID <- sample(FemaleID, 50, replace = FALSE)
submale <- ydata[ydata$ID %in% samplemaleID, ]
subFemale <- ydata[ydata$ID %in% sampleFemaleID, ]
subydata <- rbind(submale, subFemale)
xyplot(fpmacc ~ Time | Gender, group = ID, data = subydata,
type = "l", xlab = "Visit time", ylab = "FEV", col = "darkgray")
Female <- tdept_nmNomissing[tdept_nmNomissing$SEX == "Female", ]
Male <- tdept_nmNomissing[tdept_nmNomissing$SEX == "Male", ]
MaleID <- unique(Male$IID)
samplemaleID <- sample(MaleID, 50, replace = FALSE)
FemaleID <- unique(Female$IID)
sampleFemaleID <- sample(FemaleID, 50, replace = FALSE)
submale <- tdept_nmNomissing[tdept_nmNomissing$IID %in% samplemaleID, ]
subFemale <- tdept_nmNomissing[tdept_nmNomissing$IID %in% sampleFemaleID, ]
subydata <- rbind(submale, subFemale)
xyplot(bp ~ tstart | SEX, group = IID, data = subydata,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure", col = "darkgray")
set.seed(1100)
Female <- tdept_nmNomissing[tdept_nmNomissing$SEX == "Female", ]
Male <- tdept_nmNomissing[tdept_nmNomissing$SEX == "Male", ]
MaleID <- unique(Male$IID)
samplemaleID <- sample(MaleID, 50, replace = FALSE)
FemaleID <- unique(Female$IID)
sampleFemaleID <- sample(FemaleID, 50, replace = FALSE)
submale <- tdept_nmNomissing[tdept_nmNomissing$IID %in% samplemaleID, ]
subFemale <- tdept_nmNomissing[tdept_nmNomissing$IID %in% sampleFemaleID, ]
subydata <- rbind(submale, subFemale)
xyplot(bp ~ tstart | SEX, group = IID, data = subydata,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure", col = "darkgray")
load("~/Box/ShanPengLi/JM of recurrent and long data/Kim's code/Long_Rec_Ter_Transform/SimDataJM4.R")
load("~/Box/ShanPengLi/JM of recurrent and long data/Kim's code/Long_Rec_Ter_Transform/SimDataJM4.RData")
ggplot(data = data, aes(x = Ni, y = Time, color = N, group = N)) +
geom_line()
library(ggplot2)
ggplot(data = data, aes(x = Ni, y = Time, color = N, group = N)) +
geom_line()
ggplot(data = data, aes(x = Ni, y = Time, color = N, group = N)) +
geom_line() +
labs(colour = "Sample Size") +
labs(x = "Number of observations per subject") +
labs(y = "Run time (s)")
cars.lo <- loess(dist ~ speed, cars)
predict(cars.lo, data.frame(speed = seq(5, 30, 1)), se = TRUE)
# to allow extrapolation
cars.lo2 <- loess(dist ~ speed, cars,
control = loess.control(surface = "direct"))
predict(cars.lo2, data.frame(speed = seq(5, 30, 1)), se = TRUE)
library(devtools)
install_github("shanpengli/JMH", build_vignettes = FALSE)
install_github("shanpengli/JMH", build_vignettes = FALSE, force = TRUE)
require(JMH)
N200q25 <- JMH::simfit(sim = 100, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 25, ncores = 3)
install_github("shanpengli/JMH", build_vignettes = FALSE, force = TRUE)
require(JMH)
N200q25 <- JMH::simfit(sim = 100, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 25, ncores = 3)
install_github("shanpengli/JMH", build_vignettes = FALSE)
require(JMH)
N200q25 <- JMH::simfit(sim = 100, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 25, ncores = 3)
require(frailtypack)
data(kidney)
force(kidney)
View(kidney)
data(kidney)
frailtyPenal(Surv(time,status)~sex+age,
n.knots=12,kappa=10000,data=kidney)
frailtyPenal(Surv(time,status)~cluster(id)+sex+age,
n.knots=12,kappa=10000,data=kidney)
View(kidney)
View(kidney)
require(JMH)
data <- simJMdata(N = 100, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 102,
increment = 0.5)
ydata <- data$ydata
cdata <- data$cdata
a <- proc.time()
fit30 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, ID = "ID", RE = "time",
model = "interslope", print.para = TRUE)
b <- proc.time()
a <- proc.time()
fit30 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 30, ID = "ID", RE = "time",
model = "interslope", print.para = TRUE)
b <- proc.time()
data <- simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 102,
increment = 0.5)
ydata <- data$ydata
cdata <- data$cdata
a <- proc.time()
fit30 <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, ID = "ID", RE = "time",
model = "interslope", print.para = TRUE)
b <- proc.time()
require(JMH)
data <- simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 102,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdata(N = 600, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 102,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
library(JMH)
?jmcs
## Reminder: GSL library must be pre-installed before loading FastJM. See INSTALL file.
## generate JM data with single failure
require(FastJM)
?jmcs
long.formula = response ~ time + x1 + (time|ID)
all.vars(long.formula)
long.formula = response ~ time + x1 + (time|ID)
as.formula(long.formula)
long <- as.formula(long.formula)
all.vars(long)
random = ~ time|ID
all.vars(random)
random = ~ time + x1|ID
all.vars(random)
random = ~ 1|ID
all.vars(random)
random = ~ time|ID
random.form = all.vars(random)
random.form[2]
random = ~ time + x1|ID
random.form = all.vars(random)
random.form
random = ~ 1|ID
random.form = all.vars(random)
random = ~ 1|ID
random.form = all.vars(random)
random.form[-1]
is.null(random.form[-1])
?lme
library(nlme)
?lme
setwd("Desktop/GSR CODES/2021/2021 summer/JMH/")
knitr::opts_chunk$set(echo = TRUE)
keyvariable <- read.csv("../ACCORD/data/csv/accord_key.csv", header = TRUE)
getwd()
keyvariable <- read.csv("../ACCORD/data/csv/accord_key.csv", header = TRUE)
keyvariable <- read.csv("../ACCORD/data/csv/accord_key.csv", header = TRUE)
keyvariable <- read.csv("../ACCORD/data/csv/accord_key.csv", header = TRUE)
keyvariable <- keyvariable %>%
## if intensive glycemic arm glycemic_arm=1, otherwise 0.
mutate(glycemic_arm = ifelse(arm == 1 | arm == 2 | arm == 5 | arm == 6, 0, 1),
bp_arm = ifelse(arm ==3 | arm == 1, 1, 0),
lipid_arm = ifelse(arm == 7 | arm == 5, 1, 0))
library(tidyverse)
keyvariable <- keyvariable %>%
## if intensive glycemic arm glycemic_arm=1, otherwise 0.
mutate(glycemic_arm = ifelse(arm == 1 | arm == 2 | arm == 5 | arm == 6, 0, 1),
bp_arm = ifelse(arm ==3 | arm == 1, 1, 0),
lipid_arm = ifelse(arm == 7 | arm == 5, 1, 0))
cvdoutcomes <- read.csv("../ACCORD/data/csv/cvdoutcomes.csv", header = TRUE)
cvdoutcomes <- read.csv("../ACCORD/data/csv/cvdoutcomes.csv", header = TRUE)
activitystatus <- read.csv("../ACCORD/data/csv/activitystatus.csv", header = TRUE)
hba1c <- read.csv("../ACCORD/data/csv/hba1c.csv", header = TRUE)
bp <- read.csv("../ACCORD/data/csv/bloodpressure.csv", header = TRUE)
otherlabs <- read.csv("../ACCORD/data/csv/otherlabs.csv", header = TRUE)
ydatacovariate <- activitystatus %>%
select(MaskID, Visit, days_from_baseline) %>%
mutate(years_from_baseline = days_from_baseline/365.5)
ydatacovariate$years_from_baseline <- ifelse(is.na(ydatacovariate$years_from_baseline), 7, ydatacovariate$years_from_baseline)
otherlabsfpg <- otherlabs %>%
select(MaskID, Visit, fpg) %>%
filter(!is.na(fpg))
ydata <- left_join(otherlabsfpg, ydatacovariate, by = c("MaskID", "Visit"))
baselinevar <- keyvariable %>%
select(MaskID, female, baseline_age, cvd_hx_baseline, raceclass, glycemic_arm,
bp_arm, lipid_arm)
ydata <- left_join(ydata, baselinevar, by = "MaskID")
cdataoutcome <- cvdoutcomes %>%
select(MaskID, censor_po, fuyrs_po, censor_cm, fuyrs_cm, censor_nmi, fuyrs_nmi,
censor_nst, fuyrs_nst)
cdataoutcome$status <- ifelse(cdataoutcome$censor_po == 1, 0,
ifelse(cdataoutcome$fuyrs_po == cdataoutcome$fuyrs_cm, 1, 2)
)
cdataoutcome$survtime <- cdataoutcome$fuyrs_po
cdataoutcome <- cdataoutcome %>%
select(MaskID, status, survtime)
Totaldata <- left_join(ydata, cdataoutcome, by = "MaskID")
cdataoutcome <- Totaldata %>%
select(MaskID, status, survtime)
cdataoutcome <- unique(cdataoutcome)
View(cdataoutcome)
table(cdataoutcome$status)
View(otherlabs)
View(baselinevar)
cdata <- left_join(cdataoutcome, baselinevar, by = "MaskID")
View(ydata)
View(cdata)
table(cdata$status, cdata$raceclass)
View(cdata)
library(survival)
View(cdata)
View(cdata)
?coxph
coxfit1 <- coxph(Surv(survtime, status == 1) ~ female + baseline_age + cvd_hx_baseline + raceclass + glycemic_arm + bp_arm + lipid_arm, data = cdata, x = TRUE)
summary(coxfit1)
cdata$Nonwhite <- ifelse(cdata$raceclass == "White", 0, 1)
coxfit1 <- coxph(Surv(survtime, status == 1) ~ female + baseline_age + cvd_hx_baseline + Nonwhite + glycemic_arm + bp_arm + lipid_arm, data = cdata, x = TRUE)
summary(coxfit1)
coxfit2 <- coxph(Surv(survtime, status == 2) ~ female + baseline_age + cvd_hx_baseline + Nonwhite + glycemic_arm + bp_arm + lipid_arm, data = cdata, x = TRUE)
summary(coxfit2)
library(lme4)
View(ydata)
ydata$Nonwhite <- ifelse(ydata$raceclass == "White", 0, 1)
longfit <- lmer(fpg ~ years_from_baseline + female + baseline_age + cvd_hx_baseline +
Nonwhite + glycemis_arm + bp_arm + lipid_arm + (1|MaskID), data = ydata, REML = TRUE)
longfit <- lmer(fpg ~ years_from_baseline + female + baseline_age + cvd_hx_baseline +
Nonwhite + glycemic_arm + bp_arm + lipid_arm + (1|MaskID), data = ydata, REML = TRUE)
summary(longfit)
library(lme4Test)
library(lme4test)
library(lmerTest)
longfit <- lmerTest::lmer(fpg ~ years_from_baseline + female + baseline_age + cvd_hx_baseline + Nonwhite + glycemic_arm + bp_arm + lipid_arm + (1|MaskID),
data = ydata, REML = TRUE)
longfit
summary(longfit)
