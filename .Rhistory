ylab("Run Time (s)")
library(ggpubr)
standard <- c(0.09, 6.6, 46.6, 6002, 49436, NA, NA, NA, NA)
SEdata <- data.frame(samplesize, standard, "Without linearization")
colnames(SEdata) <- c("SampleSize", "RunTime", "Standard error estimation")
# improved0 <- c(0.05, 5.3, 44, 5884, 47186, NA, NA, NA, NA)
# data <- data.frame(samplesize, improved0, "Improved 0")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# SEdata <- rbind(SEdata, data)
#
# improved1 <- c(0.05, 5.3, 44, 5884, 47186, NA, NA, NA, NA)
# data <- data.frame(samplesize, improved1, "Improved I")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# SEdata <- rbind(SEdata, data)
improved2 <- c(0.01, 0.02, 0.03, 0.16, 0.30, 1.47+0.2, 3.06+0.5, 17, 32)
data <- data.frame(samplesize, improved2, "With linearization")
colnames(data) <- c("SampleSize", "RunTime", "Standard error estimation")
SEdata <- rbind(SEdata, data)
plot2a <- ggplot(data = SEdata, aes(x = SampleSize, y = RunTime, group = `Standard error estimation`, color = `Standard error estimation`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Run Time (s)")
standardvs2 <- standard/improved2
standardvs2data <- data.frame(samplesize, standardvs2)
colnames(standardvs2data) <- c("SampleSize", "Fold change")
standardvs2data <- standardvs2data[complete.cases(standardvs2data), ]
plot2b <- ggplot(data = standardvs2data, aes(x = SampleSize, y = `Fold change`)) +
geom_line() +
scale_x_log10(labels = function(x) format(x, scientific = TRUE)) +
scale_y_log10() +
xlab("Sample Size") +
ylab("Fold change")
ggarrange(plot2a, plot2b, ncol = 2, nrow = 1, labels = c('a', 'b'))
samplesize <- c(100, 500, 1000, 5000, 10000,
50000, 100000, 500000, 1000000)
standard <- c(7.5, 29, 72.8, 623, 1393, 21419, 78979, NA, NA)
EMdata <- data.frame(samplesize, standard, "Method 1")
colnames(EMdata) <- c("SampleSize", "RunTime", "Method")
# improved0 <- c(0.846858+0.06, 4.342561+1.55, 11.598946+6.5, 178.679885+190, 655.625285+740, 14376.182072+19000, 68000+61196.340396, NA, NA)
# data <- data.frame(samplesize, improved0, "Method 2")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# EMdata <- rbind(EMdata, data)
improved1 <- c(0.71, 4, 12.7, 212, 806, 19309, 68400, NA, NA)
data <- data.frame(samplesize, improved1, "Method 3")
colnames(data) <- c("SampleSize", "RunTime", "Method")
EMdata <- rbind(EMdata, data)
improved2 <- c(0.65, 2.55, 6.2, 29, 60, 287, 561, 2914, 5492)
data <- data.frame(samplesize, improved2, "Method 4")
colnames(data) <- c("SampleSize", "RunTime", "Method")
EMdata <- rbind(EMdata, data)
# improved3 <- c(0.48, 2.38, 4.60, 24, 45, 217, 408, 1977, 4342)
# data <- data.frame(samplesize, improved3, "Improved III")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# EMdata <- rbind(EMdata, data)
EMdata$Method <- as.factor(EMdata$Method)
colnames(EMdata)[3] <- "EM steps"
library(ggplot2)
plot1a <- ggplot(data = EMdata, aes(x = SampleSize, y = RunTime, color = `EM steps`, fill = `EM steps`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Run Time (s)")
method1vs2 <- standard/improved1
EMdata1vs2 <- data.frame(samplesize, method1vs2)
colnames(EMdata1vs2) <- c("SampleSize", "Fold change")
plot1b <- ggplot(data = EMdata1vs2, aes(x = SampleSize, y = `Fold change`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Fold change")
method2vs3 <- improved1/improved2
EMdata2vs3 <- data.frame(samplesize, method2vs3)
colnames(EMdata2vs3) <- c("SampleSize", "Fold change")
plot1c <- ggplot(data = EMdata2vs3, aes(x = SampleSize, y = `Fold change`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Fold change")
library(ggpubr)
ggarrange(plot1a, plot1b, plot1c, ncol = 2, nrow = 2, labels = c('a', 'b', "c"))
samplesize <- c(100, 500, 1000, 5000, 10000,
50000, 100000, 500000, 1000000)
standard <- c(7.5, 29, 72.8, 623, 1393, 21419, 78979, NA, NA)
EMdata <- data.frame(samplesize, standard, "Method 1")
colnames(EMdata) <- c("SampleSize", "RunTime", "Method")
# improved0 <- c(0.846858+0.06, 4.342561+1.55, 11.598946+6.5, 178.679885+190, 655.625285+740, 14376.182072+19000, 68000+61196.340396, NA, NA)
# data <- data.frame(samplesize, improved0, "Method 2")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# EMdata <- rbind(EMdata, data)
improved1 <- c(0.71, 4, 12.7, 212, 806, 19309, 68400, NA, NA)
data <- data.frame(samplesize, improved1, "Method 2")
colnames(data) <- c("SampleSize", "RunTime", "Method")
EMdata <- rbind(EMdata, data)
improved2 <- c(0.65, 2.55, 6.2, 29, 60, 287, 561, 2914, 5492)
data <- data.frame(samplesize, improved2, "Method 3")
colnames(data) <- c("SampleSize", "RunTime", "Method")
EMdata <- rbind(EMdata, data)
# improved3 <- c(0.48, 2.38, 4.60, 24, 45, 217, 408, 1977, 4342)
# data <- data.frame(samplesize, improved3, "Improved III")
# colnames(data) <- c("SampleSize", "RunTime", "Method")
# EMdata <- rbind(EMdata, data)
EMdata$Method <- as.factor(EMdata$Method)
colnames(EMdata)[3] <- "EM steps"
library(ggplot2)
plot1a <- ggplot(data = EMdata, aes(x = SampleSize, y = RunTime, color = `EM steps`, fill = `EM steps`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Run Time (s)")
method1vs2 <- standard/improved1
EMdata1vs2 <- data.frame(samplesize, method1vs2)
colnames(EMdata1vs2) <- c("SampleSize", "Fold change")
plot1b <- ggplot(data = EMdata1vs2, aes(x = SampleSize, y = `Fold change`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Fold change")
method2vs3 <- improved1/improved2
EMdata2vs3 <- data.frame(samplesize, method2vs3)
colnames(EMdata2vs3) <- c("SampleSize", "Fold change")
plot1c <- ggplot(data = EMdata2vs3, aes(x = SampleSize, y = `Fold change`)) +
geom_line() +
scale_x_log10() +
scale_y_log10() +
xlab("Sample Size") +
ylab("Fold change")
library(ggpubr)
ggarrange(plot1a, plot1b, plot1c, ncol = 2, nrow = 2, labels = c('a', 'b', "c"))
devtools::load_all()
devtools::load_all()
library(JMH)
N200q10RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
source("~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R")
a <- GetbiasVarRI(N200q10RI)
mean(N200q10RI$paramatrix$Time, na.rm = TRUE)
mean(N200q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N200q10RI$paramatrix[complete.cases(N200q10RI$paramatrix), ])
Getcoverage(N200q10RI)
write.csv(a, file = "../JMHSim/N200q10RI.csv", quote = FALSE, row.names = FALSE)
N400q10RI <- JMH::simfitRI(sim = 500, N = 400, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
N600q10RI <- JMH::simfitRI(sim = 500, N = 600, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
N800q10RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
a <- GetbiasVarRI(N400q10RI)
mean(N400q10RI$paramatrix$Time, na.rm = TRUE)
mean(N400q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N400q10RI$paramatrix[complete.cases(N400q10RI$paramatrix), ])
Getcoverage(N200q10RI)
write.csv(a, file = "../JMHSim/N400q10RI.csv", quote = FALSE, row.names = FALSE)
a <- GetbiasVarRI(N400q10RI)
mean(N400q10RI$paramatrix$Time, na.rm = TRUE)
mean(N400q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N400q10RI$paramatrix[complete.cases(N400q10RI$paramatrix), ])
Getcoverage(N400q10RI)
write.csv(a, file = "../JMHSim/N400q10RI.csv", quote = FALSE, row.names = FALSE)
a <- GetbiasVarRI(N600q10RI)
mean(N600q10RI$paramatrix$Time, na.rm = TRUE)
mean(N600q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N600q10RI$paramatrix[complete.cases(N600q10RI$paramatrix), ])
Getcoverage(N600q10RI)
write.csv(a, file = "../JMHSim/N600q10RI.csv", quote = FALSE, row.names = FALSE)
a <- GetbiasVarRI(N800q10RI)
mean(N800q10RI$paramatrix$Time, na.rm = TRUE)
mean(N800q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N800q10RI$paramatrix[complete.cases(N800q10RI$paramatrix), ])
Getcoverage(N800q10RI)
write.csv(a, file = "../JMHSim/N800q10RI.csv", quote = FALSE, row.names = FALSE)
devtools::load_all()
load("~/Desktop/GSR CODES/2021/2021 summer/ACCORD/ALLdeath.RData")
knitr::opts_chunk$set(echo = TRUE)
a <- proc.time()
fit30alldeath <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = fpg ~ years_from_baseline + glycemic_arm + years_glycemic_arm + fpg_baseline +
female + baseline_age + cvd_hx_baseline + yrsdiab + NonWhite + dbp + sbp + hdl + ldl + gfr +
screat + uacr + hba1c + trig,
surv.formula = Surv(survtime, status) ~ fpg_baseline + glycemic_arm +
female + baseline_age + cvd_hx_baseline + yrsdiab + NonWhite + dbp + sbp + hdl + ldl + gfr +
screat + uacr + hba1c + trig,
variance.formula = ~ years_from_baseline + glycemic_arm + years_glycemic_arm + fpg_baseline +
female + baseline_age + cvd_hx_baseline + yrsdiab + NonWhite + dbp + sbp + hdl + ldl + gfr +
screat + uacr + hba1c + trig,
maxiter = 1000, epsilon = 1e-04,
quadpoint = 30, random = ~ years_from_baseline|MaskID, print.para = TRUE)
b <- proc.time()
b - a
89877/3600
fit30alldeath
summary(fit30alldeath, coeff = "longitudinal")
summary(fit30alldeath, coeff = "longitudinal", digits = 5)
summary(fit30alldeath, coeff = "longitudinal", digits = 4)
summary(fit30alldeath, coeff = "longitudinal", digits = 5)
summary(fit30alldeath, coeff = "survival", digits = 4)
fit30alldeath
devtools::load_all()
N2000q10RI <- JMH::simfitRI(sim = 500, N = 2000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
a <- GetbiasVarRI(N2000q10RI)
mean(N2000q10RI$paramatrix$Time, na.rm = TRUE)
mean(N2000q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N2000q10RI$paramatrix[complete.cases(N2000q10RI$paramatrix), ])
Getcoverage(N2000q10RI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
source("~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R")
a <- GetbiasVarRI(N2000q10RI)
mean(N2000q10RI$paramatrix$Time, na.rm = TRUE)
mean(N2000q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N2000q10RI$paramatrix[complete.cases(N2000q10RI$paramatrix), ])
Getcoverage(N2000q10RI)
a
N20000q10RI <- JMH::simfitRI(sim = 500, N = 20000, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 10, ncores = 11)
a <- GetbiasVarRI(N20000q10RI)
mean(N20000q10RI$paramatrix$Time, na.rm = TRUE)
mean(N20000q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N20000q10RI$paramatrix[complete.cases(N20000q10RI$paramatrix), ])
Getcoverage(N20000q10RI)
a
GetbiasVarRI(N2000q10RI)
Getcoverage(N2000q10RI)
Getcoverage(N20000q10RI)
Getcoverage(N800q10RI)
View(GetbiasVarRI)
N800q10RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
a <- GetbiasVarRI(N800q10RI)
mean(N800q10RI$paramatrix$Time, na.rm = TRUE)
mean(N800q10RI$paramatrix$Iter, na.rm = TRUE)
nrow(N800q10RI$paramatrix[complete.cases(N800q10RI$paramatrix), ])
Getcoverage(N800q10RI)
write.csv(a, file = "../JMHSim/N800q15RI.csv", quote = FALSE, row.names = FALSE)
N200q15RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
N400q15RI <- JMH::simfitRI(sim = 500, N = 400, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
N600q15RI <- JMH::simfitRI(sim = 500, N = 600, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
a <- GetbiasVarRI(N600q15RI)
mean(N600q15RI$paramatrix$Time, na.rm = TRUE)
mean(N600q15RI$paramatrix$Iter, na.rm = TRUE)
nrow(N600q15RI$paramatrix[complete.cases(N600q15RI$paramatrix), ])
Getcoverage(N600q15RI)
write.csv(a, file = "../JMHSim/N600q15RI.csv", quote = FALSE, row.names = FALSE)
a <- GetbiasVarRI(N400q15RI)
Getcoverage(N400q15RI)
write.csv(a, file = "../JMHSim/N400q15RI.csv", quote = FALSE, row.names = FALSE)
a <- GetbiasVarRI(N200q15RI)
Getcoverage(N200q15RI)
write.csv(a, file = "../JMHSim/N200q15RI.csv", quote = FALSE, row.names = FALSE)
Getcoverage(N200q15RI)
Getcoverage(N400q15RI)
Getcoverage(N600q15RI)
Getcoverage(N800q10RI)
load("~/Desktop/GSR CODES/2021/2021 summer/JMHSim/FastJM.RData")
GetbiasVarRI(FASTJMN200)
View(GetbiasVarRI)
GetbiasVarRI(FASTJMN200)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI_FASTJM.R')
GetbiasVarRI(FASTJMN200)
View(GetbiasVarRI)
View(SimfitFastJMRI)
?simJMdataRI
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
Getcoverage(FASTJMN200)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
Getcoverage(FASTJMN200)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
Getcoverage(FASTJMN200)
coef <- FASTJMN200$coef
View(coef)
coefSE <- FASTJMN200$coefSE
View(coefSE)
GetbiasVarRI(FASTJMN400)
Getcoverage(FASTJMN400)
library(JMH)
library(JMH)
data <- simJMdataRI(seed = 100, N = 200)
cdata <- data$cdata
ydata <- data$ydata
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05))
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05))
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25,lambda1 = 0.05, lambda2 = 0.1)
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
data <- simJMdataRI(seed = 10, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
devtools::load_all()
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
N200q15RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 11)
N800q15RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 11)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
GetbiasVarRI(N200q15RI)
GetbiasVarRI(N800q15RI)
N800q15RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 11)
GetbiasVarRI(N800q15RI)
GetbiasVarRI(N200q15RI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R')
Getcoverage(N200q15RI)
GetbiasVarRI(N800q15RI)
Getcoverage(N800q15RI)
N800q15RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
GetbiasVarRI(N800q15RI)
Getcoverage(N800q15RI)
devtools::load_all()
N200q15RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 11)
data <- simJMdataRI(seed = 100, N = 200, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N = 800, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
N800q20RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
data <- simJMdataRI(seed = 100, N = 800, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
276*3*500/11/3600
N800q20RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
N800q20rho0.9RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
save(N800q20rho0.9RI, file = "../JMHSim/N800q20rho0.9RI.RData")
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/FastJMSim.R')
View(SimfitFastJMRI)
FASTJMN800 <- SimfitFastJMRI(sim = 500, N = 800, seed = 100)
library(FastJM)
FASTJMN800 <- SimfitFastJMRI(sim = 500, N = 800, seed = 100)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI_FASTJM.R')
GetbiasVarRI(FASTJMN800)
GetbiasVarRI(N800q20rho0.9RI)
View(GetbiasVarRI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
GetbiasVarRI(N800q20rho0.9RI)
sum(complete.cases(N800q20rho0.9RI$paramatrix))
data <- N800q20rho0.9RI
coverage <- matrix(0, nrow = 500, ncol = 23)
beta = c(5, 1.5, 2, 1, 2)
tau = c(0.5, 0.5, -0.2, 0.2, 0.05)
gamma1 = c(1, 0.5, 0.5)
gamma2 = c(-0.5, 0.5, 0.25)
vee1 = 0.5
vee2 = -0.5
alpha1 = as.vector(1)
alpha2 = as.vector(-1)
Sig <- matrix(c(0.5, 0.45, 0.45, 0.5), nrow = 2, ncol = 2)
truepara <- c(beta, tau, gamma1, gamma2, alpha1, alpha2, vee1, vee2, Sig[1, 1], Sig[2, 2], Sig[1, 2])
for (i in 1:500) {
for (j in 1:23) {
para <- data$paramatrix[i, j]
SE <- data$paramatrixSE[i, j]
LL <- para - 1.96*SE
UL <- para + 1.96*SE
if (truepara[j] <= UL & truepara[j] >= LL) {
coverage[i, j] <- TRUE
} else {
coverage[i, j] <- FALSE
}
}
}
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R')
Getcoverage(N800q20rho0.9RI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R')
Getcoverage(N800q20rho0.9RI)
data <- N800q20rho0.9RI$paramatrixSE
View(data)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
Getcoverage(FASTJMN800)
GetbiasVarRI(FASTJMN800)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI_FASTJM.R')
GetbiasVarRI(FASTJMN800)
devtools::load_all()
data <- simJMdataRI(seed = 100, N = 800, tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
lambda1 = 0.05, lambda2 = 0.1, CL = 4, CU = 8,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, random = ~ 1|ID, print.para = TRUE)
N800q20rho0.75RI <- JMH::simfitRI(sim = 500, N = 800, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI.R')
GetbiasVarRI(N800q20rho0.75RI)
N200q20rho0.75RI <- JMH::simfitRI(sim = 500, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 20, ncores = 11)
GetbiasVarRI(N200q20rho0.75RI)
GetbiasVarRI(N800q20rho0.75RI)
GetbiasVarRI(N200q20rho0.75RI)
GetbiasVarRI(N800q20rho0.75RI)
GetbiasVarRI(N200q20rho0.75RI)
Getcoverage(N200q20rho0.9RI)
Getcoverage(N200q20rho0.75RI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/Getcoverage.R')
Getcoverage(N200q20rho0.75RI)
Getcoverage(N800q20rho0.75RI)
Getcoverage(N200q20rho0.75RI)
GetbiasVarRI(N800q20rho0.75RI)
Getcoverage(N800q20rho0.75RI)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/FastJMSim.R')
FASTJMN200 <- SimfitFastJMRI(sim = 500, N = 200, seed = 100)
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetbiasVarRI_FASTJM.R')
source('~/Desktop/GSR CODES/2021/2021 summer/JMHSim/GetcoverageFastJM.R')
GetbiasVarRI(FASTJMN200)
Getcoverage(FASTJMN200)
FASTJMN800 <- SimfitFastJMRI(sim = 500, N = 800, seed = 100)
GetbiasVarRI(FASTJMN800)
Getcoverage(FASTJMN800)
devtools::load_all()
devtools::load_all()
source('~/Desktop/GSR CODES/2021/2021 Fall/JMHRealSim/bootsfitRealJMH.R')
View(bootsfitRealJMH)
View(bootsfitRealJMH)
source('~/Desktop/GSR CODES/2021/2021 Fall/JMHRealSim/bootsfitRealJMH.R')
source('~/Desktop/GSR CODES/2021/2021 Fall/JMHRealSim/simRealData.R')
View(simRealData)
library("RcppEigen")
devtools::document()
