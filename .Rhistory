labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
nonwhiteplot <- ggplot(data = NonWhiteY, aes(x = tstart, y = bp)) +
geom_point() +
geom_smooth(span = 0.3) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 Non-White participants")
ggarrange(whiteplot, nonwhiteplot,
labels = c("A", "B"),
ncol = 2, nrow = 1)
whiteplot <- ggplot(data = WhiteY, aes(x = tstart, y = bp)) +
geom_point() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
nonwhiteplot <- ggplot(data = NonWhiteY, aes(x = tstart, y = bp)) +
geom_point() +
geom_smooth(span = 0.3) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 Non-White participants")
ggarrange(whiteplot, nonwhiteplot,
labels = c("A", "B"),
ncol = 2, nrow = 1)
mean <- aggregate(tdept_nmNomissingSample[, c("bp")], list(tdept_nmNomissingSample$IID), mean)
View(mean)
colnames(mean) <- c("IID", "mean")
library(tidyverse)
tdept <- left_join(tdept_nmNomissingSample, mean, by = "IID")
View(tdept)
tdept$diff <- tdept$bp - tdept$mean
malewhite <- tdept[tdept$SEX == "Male" & tdept$race == "White", ]
View(malewhite)
femalewhite <- tdept[tdept$SEX == "Female" & tdept$race == "White", ]
malenonwhite <- tdept[tdept$SEX == "Male" & tdept$race != "White", ]
femalenonwhite <- tdept[tdept$SEX == "Female" & tdept$race != "White", ]
malewhite <- malewhite[, c("IID", "tstart", "diff")]
View(malewhite)
malewhite <- malewhite[, c("IID", "tstart", "diff")]
femalewhite <- femalewhite[, c("IID", "tstart", "diff")]
malenonwhite <- malenonwhite[, c("IID", "tstart", "diff")]
femalenonwhite <- femalenonwhite[, c("IID", "tstart", "diff")]
View(femalenonwhite)
xyplot(bp ~ tstart, group = IID, data = malenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
xyplot(diff ~ tstart, group = IID, data = malenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
xyplot(diff ~ tstart, group = IID, data = malenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
xyplot(diff ~ tstart, group = IID, data = femalenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
par(mfrow=c(2,2))
xyplot(diff ~ tstart, group = IID, data = malenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
xyplot(diff ~ tstart, group = IID, data = femalenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
par(mfrow=c(1,2))
xyplot(diff ~ tstart, group = IID, data = malenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
xyplot(diff ~ tstart, group = IID, data = femalenonwhite,
type = "l", xlab = "Age at visit", ylab = "Systolic blood pressure")
ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
set.seed(270)
malewhite <- tdept[tdept$SEX == "Male" & tdept$race == "White", ]
femalewhite <- tdept[tdept$SEX == "Female" & tdept$race == "White", ]
maleID <- unique(malewhite$IID)
a <- sample(maleID, 50, replace = FALSE)
malewhite <- malewhite[malewhite$IID %in% a, ]
femaleID <- unique(femalewhite$IID)
a <- sample(femaleID, 50, replace = FALSE)
femalewhite <- femalewhite[femalewhite$IID %in% a, ]
malenonwhite <- tdept[tdept$SEX == "Male" & tdept$race != "White", ]
femalenonwhite <- tdept[tdept$SEX == "Female" & tdept$race != "White", ]
malewhite <- malewhite[, c("IID", "tstart", "diff")]
femalewhite <- femalewhite[, c("IID", "tstart", "diff")]
malenonwhite <- malenonwhite[, c("IID", "tstart", "diff")]
femalenonwhite <- femalenonwhite[, c("IID", "tstart", "diff")]
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
ggarrange(malenonwhiteplot, femalenonwhiteplot, malenonwhiteplot, malenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
geom_smooth(span = 0.5) +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 White participants")
ggarrange(malenonwhiteplot, femalenonwhiteplot, malenonwhiteplot, malenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
malewhiteplot <- ggplot(data = malewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 male White participants")
femalewhiteplot <- ggplot(data = femalewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 female White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 male Non-White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 female Non-White participants")
ggarrange(malewhiteplot, femalewhiteplot, malenonwhiteplot, malenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
malewhiteplot <- ggplot(data = malewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 male White participants")
femalewhiteplot <- ggplot(data = femalewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 female White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 male Non-White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Systolic blood pressure", title = "Loess plot for 50 female Non-White participants")
ggarrange(malewhiteplot, femalewhiteplot, malenonwhiteplot, femalenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
length(unique(femalenonwhite))
View(femalenonwhite)
length(unique(femalenonwhite$IID))
length(unique(malenonwhite$IID))
malewhiteplot <- ggplot(data = malewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 50 male White participants")
femalewhiteplot <- ggplot(data = femalewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 50 female White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 18 male Non-White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 29 female Non-White participants")
ggarrange(malewhiteplot, femalewhiteplot, malenonwhiteplot, femalenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
malewhiteplot <- ggplot(data = malewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 50 male White participants")
femalewhiteplot <- ggplot(data = femalewhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 50 female White participants")
malenonwhiteplot <- ggplot(data = malenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 18 male Non-White participants")
femalenonwhiteplot <- ggplot(data = femalenonwhite, aes(x = tstart, y = diff, group = IID)) +
geom_line() +
labs(x = "Age at visit", y = "Empirical residual", title = "Empirical residual plot for 32 female Non-White participants")
ggarrange(malewhiteplot, femalewhiteplot, malenonwhiteplot, femalenonwhiteplot,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2)
setwd("/Users/shanpengli/Box/ShanPengLi/JM of recurrent and long data/Kim's code/Long_Rec_Ter_Transform")
source("func.R")
a <- simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10,
increment = 0.25)
ydata <- a$ydata
cdata <- a$cdata
library(JMH)
a <- simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10,
increment = 0.25)
ydata <- a$ydata
cdata <- a$cdata
a <- JMH::simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10,
increment = 0.25)
ydata <- a$ydata
cdata <- a$cdata
library(JMH)
a <- JMH::simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10,
increment = 0.25)
ydata <- a$ydata
cdata <- a$cdata
devtools::load_all()
a <- JMH::simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10,
increment = 0.25)
ydata <- a$ydata
cdata <- a$cdata
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 16, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
devtools::load_all()
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 16, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 20, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 25, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 25, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
b - a
View(fit)
(b - a)[3]
return(0)
ncol <- length(fit$beta) + length(fit$tau) + length(fit$gamma1) + length(fit$gamma2)
+ length(fit$alpha1) + length(fit$alpha2) + length(fit$vee1) + length(fit$vee2) + 6 + 1
fit$beta[1]
fit$vee1
nrow(fit$Sig)
fit$Sig[1, 1]
devtools::load_all()
devtools::document()
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
devtools::load_all()
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
devtools::load_all()
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
library(JMH)
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
devtools::load_all()
library(JMH)
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
a <- JMH::simfit(sim = 3, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 3)
a
fit != 0
a[[1]]
is.vector(a[[1]])
paramatrix <- matrix(0, nrow = sim, ncol = 13)
sim = 3
paramatrix <- matrix(0, nrow = sim, ncol = 13)
for (i in 1:sim) {
paramatrix[i, ] <- a[[i]]
}
length(a[[1]])
sim = 3
paramatrix <- matrix(0, nrow = sim, ncol = 29)
for (i in 1:sim) {
paramatrix[i, ] <- a[[i]]
}
View(paramatrix)
for (i in 1:5) colnames(paramatrix)[i] <- paste0("beta_", i-1)
i = 1
paste0("beta_", i-1)
for (i in 1:5) {
colnames(paramatrix)[i] <- paste0("beta_", i-1)
}
paramatrix <- as.data.frame(matrix(0, nrow = sim, ncol = 29))
for (i in 1:sim) {
paramatrix[i, ] <- a[[i]]
}
for (i in 1:5) {
colnames(paramatrix)[i] <- paste0("beta_", i-1)
}
View(paramatrix)
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("tau_", i-1)
count <- count + 1
}
count <- 1
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("beta_", i-1)
count <- count + 1
}
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("tau_", i-1)
count <- count + 1
}
View(paramatrix)
count <- 1
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("beta_", i-1)
count <- count + 1
}
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("tau_", i-1)
count <- count + 1
}
for (i in 1:3) {
colnames(paramatrix)[count] <- paste0("gamma1_", i)
count <- count + 1
}
for (i in 1:3) {
colnames(paramatrix)[count] <- paste0("gamma2_", i)
count <- count + 1
}
count <- 1
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("beta_", i-1)
count <- count + 1
}
for (i in 1:5) {
colnames(paramatrix)[count] <- paste0("tau_", i-1)
count <- count + 1
}
for (i in 1:3) {
colnames(paramatrix)[count] <- paste0("gamma1_", i)
count <- count + 1
}
for (i in 1:3) {
colnames(paramatrix)[count] <- paste0("gamma2_", i)
count <- count + 1
}
for (i in 1:2) {
colnames(paramatrix)[count] <- paste0("alpha1_", i)
count <- count + 1
}
for (i in 1:2) {
colnames(paramatrix)[count] <- paste0("alpha2_", i)
count <- count + 1
}
colnames(paramatrix)[count] <- paste0("vee1")
count <- count + 1
colnames(paramatrix)[count] <- paste0("vee2")
count <- count + 1
for (i in 1:3) {
colnames(paramatrix)[count] <- paste0("Sig_", i, i)
count <- count + 1
}
colnames(paramatrix)[count] <- paste0("Sig_12")
count <- count + 1
colnames(paramatrix)[count] <- paste0("Sig_23")
count <- count + 1
colnames(paramatrix)[count] <- paste0("Sig_13")
count <- count + 1
colnames(paramatrix)[count] <- paste0("Time")
a <- 0
a$beta
devtools::load_all()
library(JMH)
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
devtools::load_all()
library(JMH)
a <- JMH::simfit(sim = 10, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
View(a)
a <- JMH::simfit(sim = 100, N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 100, maxiter = 1000,
increment = 0.25, quadpoint = 15, ncores = 10)
for (j in 1:10) {
data <- JMH::simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10 + j,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
#devtools::load_all()
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
(b - a)[3]
}
for (j in 1:10) {
writeLines(paste0("Now is running ", j, "th sample!"))
data <- JMH::simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10 + j,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
#devtools::load_all()
a <- proc.time()
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, ID = "ID", RE = "time",
model = "interslope")
b <- proc.time()
(b - a)[3]
}
devtools::load_all()
for (j in 1:10) {
writeLines(paste0("Now is running ", j, "th sample!"))
data <- simJMdata(N = 200, lambda1 = 0.05, lambda2 = 0.1,
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
CL = 4, CU = 8, seed = 10 + j,
increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
#devtools::load_all()
a <- proc.time()
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.var = c("Z1", "Z2", "Z3", "time"), maxiter = 1000, epsilon = 1e-04,
quadpoint = 15, ID = "ID", RE = "time",
model = "interslope", print.para = FALSE)
b <- proc.time()
(b - a)[3]
}
ncores = 10
sim = 10
N =200
lambda1 = 0.05
lambda2 = 0.1
tau = c(0.5, 0.5, -0.2, 0.2, 0.05)
CL = 4
CU = 8
seed = 10
increment = 0.25
maxiter = 1000
quadpoint=15
cl <- parallel::makeCluster(ncores)
ParaMatrixRaw <- parallel::parLapply(cl, 1:sim, bootsfit,
N = N, lambda1 = lambda1, lambda2 = lambda2,
tau = tau,
CL = CL, CU = CU, seed = seed, maxiter = maxiter,
increment = increment, quadpoint = quadpoint)
parallel::stopCluster(cl)
