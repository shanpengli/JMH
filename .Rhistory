s = landmark.time,
obs.time = "time")
undebug(survPAJMMLSM)
val.cdata <- cdata[-folds[[1]], ]
val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
landmark.time <- 5
val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
NewyID <- unique(val.ydata$ID)
val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
cnewdata = val.cdata,
u = 6:9,
s = landmark.time,
obs.time = "time")
survfit$Pred$Risk1
data <- simJMdataRI(seed = 100, N = 3000, increment = 0.7, beta = c(5, 1.5, 2, 1, 2),
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = 0.1,
alpha2 = -0.1,
vee1 = 0.5,
vee2 = -0.5,
lambda1 = 0.05,
lambda2 = 0.1,
CL = 5,
CU = 10,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2))
cdata <- data$cdata
ydata <- data$ydata
folds <- caret::groupKFold(c(1:nrow(cdata)), k = 4)
train.cdata <- cdata[folds[[1]], ]
train.ydata <- ydata[ydata$ID %in% train.cdata$ID, ]
a <- proc.time()
fit <- JMMLSM(cdata = train.cdata, ydata = train.ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
val.cdata <- cdata[-folds[[1]], ]
val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
landmark.time <- 5
val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
NewyID <- unique(val.ydata$ID)
val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
cnewdata = val.cdata,
u = 6:9,
s = landmark.time,
obs.time = "time")
survfit$Pred$Risk1
val.cdata <- cdata[-folds[[1]], ]
val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
landmark.time <- 5
val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
NewyID <- unique(val.ydata$ID)
val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
cnewdata = val.cdata,
u = 6:9,
s = landmark.time,
obs.time = "time")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdataRI.R")
data <- simJMdataRI(seed = 100, N = 3000, increment = 0.7, beta = c(5, 1.5, 2, 1, 2),
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = 0.1,
alpha2 = -0.1,
vee1 = 0.5,
vee2 = -0.5,
lambda1 = 0.05,
lambda2 = 0.1,
CL = 5,
CU = 10,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2))
cdata <- data$cdata
ydata <- data$ydata
set.seed(100)
folds <- caret::groupKFold(c(1:nrow(cdata)), k = 4)
train.cdata <- cdata[folds[[1]], ]
train.ydata <- ydata[ydata$ID %in% train.cdata$ID, ]
a <- proc.time()
fit <- JMMLSM(cdata = train.cdata, ydata = train.ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
val.cdata <- cdata[-folds[[1]], ]
val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
landmark.time <- 5
val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
NewyID <- unique(val.ydata$ID)
val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
cnewdata = val.cdata,
u = 6:9,
s = landmark.time,
obs.time = "time")
survfit$Pred$Risk1
val.cdata <- cdata[-folds[[1]], ]
val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
landmark.time <- 3
val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
NewyID <- unique(val.ydata$ID)
val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
cnewdata = val.cdata,
u = 4:7,
s = landmark.time,
obs.time = "time")
survfit$Pred$Risk1
document()
install()
install()
library(JMH)
survfit <- PAJMMLSM(seed = 100, fit, landmark.time = 3,
horizon.time = 4:7, obs.time = "time",
n.cv = 4)
install()
library(JMH)
survfit <- PAJMMLSM(seed = 100, fit, landmark.time = 3,
horizon.time = 4:7, obs.time = "time",
n.cv = 4)
document()
install()
library(JMH)
data <- simJMdataRI(seed = 100, N = 600, increment = 0.7, beta = c(5, 1.5, 2, 1, 2),
tau = c(0.5, 0.5, -0.2, 0.2, 0.05),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = 0.1,
alpha2 = -0.1,
vee1 = 0.5,
vee2 = -0.5,
lambda1 = 0.05,
lambda2 = 0.1,
CL = 5,
CU = 10,
covbw = matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2))
cdata <- data$cdata
ydata <- data$ydata
a <- proc.time()
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
b <- proc.time()
# val.cdata <- cdata[-folds[[1]], ]
# val.ydata <- ydata[ydata$ID %in% val.cdata$ID, ]
#
# landmark.time <- 3
# val.cdata <- val.cdata[val.cdata$survtime > landmark.time, ]
# val.ydata <- val.ydata[val.ydata$ID %in% val.cdata$ID, ]
# val.ydata <- val.ydata[val.ydata$time <= landmark.time, ]
# NewyID <- unique(val.ydata$ID)
# val.cdata <- val.cdata[val.cdata$ID %in% NewyID, ]
#debug(survPAJMMLSM)
# survfit <- survPAJMMLSM(fit, ynewdata = val.ydata,
#                         cnewdata = val.cdata,
#                         u = 4:7,
#                         s = landmark.time,
#                         obs.time = "time")
survfit <- PAJMMLSM(seed = 100, fit, landmark.time = 3,
horizon.time = 4:7, obs.time = "time",
n.cv = 4)
install()
library(JMH)
summary(survfit)
install()
library(JMH)
summary(survfit)
install()
library(JMH)
survfit <- PAJMMLSM(seed = 100, fit, landmark.time = 3,
horizon.time = 4:7, obs.time = "time",
n.cv = 4)
summary(survfit)
install()
library(JMH)
summary(survfit)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_Brier2.R")
debug(bootsfitMESA_Brier2)
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 3, horizon.time = c(4:7),
method = "GH", model = "JMH", mc.cores = 12)
library(JMH)
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 3, horizon.time = c(4:7),
method = "GH", model = "JMH", mc.cores = 12)
library(parallel)
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 3, horizon.time = c(4:7),
method = "GH", model = "JMH", mc.cores = 12)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simfitMESA.R")
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 3, horizon.time = c(4:7),
method = "GH", model = "JMH", mc.cores = 12)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMMESA.R")
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 3, horizon.time = c(4:7),
method = "GH", model = "JMH", mc.cores = 12)
View(cdata)
hist(cdata$survtime[cdata$cmprsk == 1])
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "JMH", mc.cores = 12)
fit
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_Brier2.R")
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "JMH", mc.cores = 12)
debug(bootsfitMESA_Brier2)
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "JMH", mc.cores = 12)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_MAEQ2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_Brier2.R")
a <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "JMH", mc.cores = 12)
summary(a)
a
a.FastJM <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
a.FastJM
warnings()
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_Brier2.R")
a.FastJM <- mclapply(1, bootsfitMESA_Brier2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
a.FastJM
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_AUC2.R")
a
a.FastJM <- mclapply(1, bootsfitMESA_AUC2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
a.FastJM <- mclapply(1, bootsfitMESA_AUC2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", metric = "Cindex", mc.cores = 12)
warnings()
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_AUC2.R")
install()
library(JMH)
library(FastJM)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_MAEQ2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_MAEQ2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_MAEQ2.R")
a.FastJM <- mclapply(1, bootsfitMESA_MAEQ2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", metric = "Cindex", mc.cores = 12)
library(parallel)
a.FastJM <- mclapply(1, bootsfitMESA_MAEQ2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", metric = "Cindex", mc.cores = 12)
a.FastJM <- mclapply(1, bootsfitMESA_MAEQ2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
library(FastJM)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/GetEmpiricalCIF.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdataRI.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitRI_MAEQ2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitRI_AUC2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitRI_Brier2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_MAEQ2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_AUC2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootsfitMESA_Brier2.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/CindexCR.R")
a.FastJM <- mclapply(1, bootsfitMESA_MAEQ2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
library(parallel)
a.FastJM <- mclapply(1, bootsfitMESA_MAEQ2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", mc.cores = 12)
a.FastJM
a.FastJM <- mclapply(1, bootsfitMESA_AUC2,
seed = 103 + 1, N = 3000,
n.cv = 4, landmark.time = 10, horizon.time = c(11:13),
method = "GH", model = "FastJM", metric = "Cindex", mc.cores = 12)
library(JMH)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = FALSE)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE)
Sys.time(JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = TRUE))
a <- proc.time()
fit <- JMMLSM(cdata = cdata, ydata = ydata,
+               long.formula = Y ~ Z1 + Z2 + Z3 + time,
a <- proc.time()
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 6, random = ~ 1|ID, print.para = FALSE)
b <- proc.time()
b - a
a <- matrix(c(10, 3, 2, 3, 1, 2, 2, 1), nrow = 3)
a <- matrix(c(10, 3, 2, 3, 1, 2, 2, 2, 1), nrow = 3)
a
check_definiteness <- function(mat) {
eigenvalues <- eigen(mat)$values
if (all(eigenvalues > 0)) {
return("Positive Definite")
} else if (all(eigenvalues < 0)) {
return("Negative Definite")
} else if (any(eigenvalues > 0) && any(eigenvalues < 0)) {
return("Indefinite")
} else if (all(eigenvalues >= 0)) {
return("Positive Semi-Definite")
} else if (all(eigenvalues <= 0)) {
return("Negative Semi-Definite")
} else {
return("Indefinite")
}
}
check_definiteness(a)
a <- matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3)
check_definiteness(a)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
data <- simJMdatahomo(i = 1, N = 800)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
data <- simJMdatahomo(i = 1, N = 800)
warnings()
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
data <- simJMdatahomo(i = 1, N = 800)
debug(simJMdatahomo)
data <- simJMdatahomo(i = 1, N = 800)
time
ni
increment
cdata[i, 2]
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
debug(simJMdatahomo)
data <- simJMdatahomo(i = 1, N = 800)
time
timebs
undebug(simJMdatahomo)
data <- simJMdatahomo(i = 1, N = 800)
ydata <- data$ydata
cdata <- data$cdata
View(ydata)
View(cdata)
data <- simJMdatahomo(i = 1, N = 800, lambda1 = 0.05, lambda2 = 0.1,
beta = c(5, 1.5, 2, 1, 2),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.05),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdatahomo(i = 1, N = 800, lambda1 = 0.05, lambda2 = 0.1,
beta = c(5, 1.5, 2, 1, 2),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.1),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdatahomo(i = 1, N = 800, lambda1 = 0.05, lambda2 = 0.15,
beta = c(5, 1.5, 2, 1, 2),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.1),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
View(cdata)
library(JMH)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + time,
quadpoint = 6, random = ~ timens1 + timens2|ID, epsilon = 1e-3, print.para = TRUE)
data <- simJMdatahomo(i = 1, N = 800, lambda1 = 0.05, lambda2 = 0.15,
beta = c(5, 1.5, 2, 1, 2),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.1),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + time,
quadpoint = 6, random = ~ time|ID, epsilon = 1e-3, print.para = TRUE)
fit.FastJM <- FastJM::jmcs(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + timens1 + timens2,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
quadpoint = 6, random = ~ timens1 + timens2|ID, tol = 1e-3, print.para = TRUE)
exp(0.5)
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
data <- simJMdatahomo(i = 1, N = 800, lambda1 = 0.05, lambda2 = 0.15,
beta = c(5, 1.5, 2, 1),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.1),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit.FastJM <- FastJM::jmcs(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + timens1 + timens2,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
quadpoint = 6, random = ~ timens1 + timens2|ID, tol = 1e-3, print.para = TRUE)
data <- simJMdatahomo(i = 1, N = 3000, lambda1 = 0.05, lambda2 = 0.15,
beta = c(5, 1.5, 2, 1),
sigma2 = exp(0.5),
gamma1 = c(1, 0.5, 0.5),
gamma2 = c(-0.5, 0.5, 0.25),
alpha1 = c(0.05, 0.01, 0.02),
alpha2 = c(-0.05, 0.02, 0.1),
CL = 4, CU = 8,
sigb = matrix(c(10, 3, 2, 3, 4, 2, 2, 2, 4), nrow = 3),
seed = 10, increment = 0.25)
ydata <- data$ydata
cdata <- data$cdata
fit.FastJM <- FastJM::jmcs(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + timens1 + timens2,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
quadpoint = 6, random = ~ timens1 + timens2|ID, tol = 1e-3, print.para = TRUE)
fit.FastJM <- FastJM::jmcs(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + timens1 + timens2,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
quadpoint = 6, random = ~ timens1 + timens2|ID, tol = 1e-4, print.para = TRUE)
fit <- JMH::JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + time,
quadpoint = 6, random = ~ time|ID, epsilon = 1e-3, print.para = TRUE)
?MAEQJMMLSM
Pred <- JMH::MAEQJMMLSM(seed = 100, object = fit, landmark.time = 3, horizon.time = 4:7,
obs.time = "time", method = "GH", n.cv = 4, initial.para = TRUE)
Pred
summary(Pred)
Pred.FastJM <- FastJM::MAEQjmcs(seed = 100, object = fit, landmark.time = 3, horizon.time = 4:7,
obs.time = "time", method = "GH", n.cv = 4, initial.para = TRUE)
Pred.FastJM <- FastJM::MAEQjmcs(seed = 100, object = fit.FastJM, landmark.time = 3, horizon.time = 4:7,
obs.time = "time", method = "GH", n.cv = 4, initial.para = TRUE)
summary(Pred.FastJM)
?PEJMMLSM
?PEjmcs
?AUCJMMLSM
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/simJMdatahomo.R")
source("~/Desktop/GSR CODES/2024/JMH_revision2/JMH/R/bootPredhomo.R")
