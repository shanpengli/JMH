quadpoint = 10,
simulate = FALSE,
u = seq(5.2, 7.2, by = 0.5))
survfit
devtools::load_all()
survfit <- survfit3JMMLSM(fitboot, ynewdata = ynewdata,
cnewdata = cnewdata,
quadpoint = 10,
simulate = FALSE,
u = seq(5.2, 7.2, by = 0.5))
survfit
survfit <- survfit3JMMLSM(fitboot, ynewdata = ynewdata,
cnewdata = cnewdata,
quadpoint = 15,
simulate = FALSE,
u = seq(5.2, 7.2, by = 0.5))
survfit
?JM::jointModel
?JM::survfitJM
devtools::load_all()
devtools::document()
survfit <- survfit3JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5))
devtools::load_all()
survfit <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5))
devtools::load_all()
survfit <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5))
devtools::load_all()
survfit <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5))
?survfit5JMMLSM
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 1)
devtools::load_all()
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 1)
devtools::load_all()
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 1)
survfit2$Predraw1
survfit2$Predraw1[1, , ]
survfit
Predraw1[, 1, ]
survfit2$Predraw1[, 1, ]
aa <- array(1:12, dim = c(2, 2, 3))
aa[, 2, ]
aa[1, , ]
aa[2, , ]
Hmisc::hdquantile(4, probs = 0.025)
Hmisc::hdquantile(c(1:2), probs = 0.025)
devtools::load_all()
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 1)
devtools::load_all()
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 1)
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 2)
survfit2
survfit2$Pred
devtools::load_all()
survfit2$Last.time
survfit2$y.obs
survfit$y.obs
devtools::load_all()
survfit2 <- survfit5JMMLSM(fit, ynewdata = ynewdata,
cnewdata = cnewdata,
method = "GH",
u = seq(5.2, 7.2, by = 0.5),
B = 2)
survfit2
survfit2$Pred
devtools::document()
survfit2
devtools::load_all()
devtools::load_all()
devtools::document()
??JMBayes::jointModelBayes
devtools::document()
devtools::load_all()
?survfitJMMLSM2
??survfit2JMMLSM
?survfit2JMMLSM
a <- proc.time()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 100, burn.in = 0, simulate = TRUE, quadpoint = 15)
a <- proc.time()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 100, burn.in = 0, simulate = TRUE, quadpoint = 10)
devtools::load_all()
a <- proc.time()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
survfit
devtools::load_all()
devtools::load_all()
a <- proc.time()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
b <- proc.time()
b - a
survfit$posterior$`42`
survfit$posterior$`3`
length(survfit$posterior)
Sub1 <- matrix(NA, nrow = 200, ncol = 2)
for (i in 1:200) {
Sub1[i, ] <- survfit$posterior[[i]][1, ]
}
View(Sub1)
plot(c(1:200), Sub1[, 1])
plot(c(1:200), Sub1[, 1], type = "l")
plot(c(1:200), Sub1[, 2], type = "l")
devtools::load_all()
??JMMLSM
JMH::JMMLSM()
devtools::load_all()
devtools::load_all()
devtools::load_all()
load("~/Desktop/testDP2.RData")
survfit
survfitboot
devtools::load_all()
devtools::document()
a <- matrix(0, ncol = 2, nrow = 2)
a[1, ]
is.vector(a[1, ])
devtools::load_all()
data <- simJMdataRI(seed = 100, N = 200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
cdata2 <- cdata[cdata$ID %in% c(42, 48), ]
ydata2 <- ydata[ydata$ID %in% c(42, 48), ]
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
View(cdata2)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
devtools::load_all()
devtools::load_all()
devtools::load_all()
a <- simfitRI_DP(sim = 500, Nv = 200, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 7, M = 500, method = "boots")
devtools::load_all()
a <- simfitRI_DP(sim = 500, Nv = 200, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 7, M = 500, method = "boots")
a <- simfitRI_DP(sim = 2, Nv = 200, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 7, M = 10, method = "boots")
a <- simfitRI_DP(sim = 11, Nv = 200, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boots")
devtools::document()
a <- simfitRI_DP(sim = 11, Nv = 20, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 10, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 5, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 2, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 3, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 4, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 5, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boo")
a <- simfitRI_DP(sim = 11, Nv = 5, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 11, M = 10, method = "boots")
devtools::load_all()
data <- simJMdataRI(seed = 100, N = 200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
cdata2 <- cdata[cdata$ID %in% c(42, 48), ]
ydata2 <- ydata[ydata$ID %in% c(42, 48), ]
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(4, 10, by = 2), M = 100, simulate = TRUE,
quadpoint = 10)
survfit2
library(JMH)
data(ydata)
data(cdata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
load("~/Desktop/testDP.RData")
View(cnewdata)
a <- proc.time()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 400, simulate = TRUE,
quadpoint = 10)
b <- proc.time()
b - a
View(survfit)
survfit
devtools::load_all()
devtools::load_all()
survfit
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
devtools::load_all()
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
devtools::load_all()
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
b <- proc.time()
b - a
survfit
survfit.turn
devtools::load_all()
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 200, burn.in = 0, simulate = TRUE, quadpoint = 10)
b <- proc.time()
b - a
survfit.turn
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 400, burn.in = 0.2, simulate = TRUE, quadpoint = 10)
b <- proc.time()
b - a
survfit.turn
a <- proc.time()
survfit.turn <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 2000, burn.in = 0.2, simulate = TRUE, quadpoint = 10)
b <- proc.time()
b - a
survfit.turn
survfit
B = 2000
Sub1 <- matrix(NA, nrow = B, ncol = 2)
for (i in 1:B) {
Sub1[i, ] <- survfit.turn$posterior[[i]][1, ]
}
plot(c(1:B), Sub1[, 1], type = "l")
B = 2000
Sub1 <- matrix(NA, nrow = B, ncol = 2)
for (i in 1:B) {
Sub1[i, ] <- survfit.turn$posterior[[i]][2, ]
}
plot(c(1:B), Sub1[, 1], type = "l")
devtools::load_all()
devtools::load_all()
devtools::load_all()
load("~/Desktop/testDP2.RData")
a <- proc.time()
survfit.new3 <- survfit3JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 0.5), M = 500, simulate = TRUE, quadpoint = 15)
devtools::load_all()
a <- proc.time()
survfit.new3 <- survfit3JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 500, simulate = TRUE, quadpoint = 15)
survfitboot
devtools::load_all()
devtools::document()
a <- proc.time()
survfit.new3 <- survfit3JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 500, simulate = TRUE, quadpoint = 15)
survfitboot
devtools::load_all()
devtools::document()
a <- proc.time()
survfit.new3 <- survfit3JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata,
u = seq(5.2, 7.2, by = 1), M = 500, n.nested = 100, simulate = TRUE, quadpoint = 15)
devtools::load_all()
devtools::load_all()
?survfit3JMMLSM
devtools::load_all()
devtools::load_all()
a <- simfitRI_DP(sim = 500, Nv = 200, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 2), quadpoint = 15, ncores = 8, M = 300, method = "nss")
P1us = a$TrueP1ik
P2us = a$TrueP2ik
View(P1us)
remove(a)
save.image("~/Desktop/testDP_truepik.RData")
devtools::load_all()
devtools::document()
devtools::load_all()
?JMH::simfitRI_DP.test()
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 10, seed = 100, increment = 0.25, CL = 2, CU = 10)
devtools::load_all()
devtools::document()
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 10, seed = 100, increment = 0.25, CL = 2, CU = 10)
devtools::load_all()
devtools::document()
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 10, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
ydata <- a$vali.ydata
cdata <- a$vali.cdata
View(cdata)
View(ydata)
time1 <- proc.time()
a100 <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
ydata100 <- a$vali.ydata
cdata100 <- a$vali.cdata
View(cdata)
View(cdata100)
View(ydata100)
a$TrueP1ik
a100$TrueP1ik
time1 <- proc.time()
a100 <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
ydata100 <- a100$vali.ydata
cdata100 <- a100$vali.cdata
devtools::load_all()
devtools::document()
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 10, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
time1 <- proc.time()
a100 <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 10, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
ydataRAW <- a$vali.ydataRAW
cdataRAW <- a$vali.cdataRAW
View(cdataRAW)
time1 <- proc.time()
a100 <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
ydataRAW100 <- a100$vali.ydataRAW
cdataRAW100 <- a100$vali.cdataRAW
View(cdataRAW)
View(cdataRAW100)
View(cdataRAW100)
View(cdataRAW)
seed = 100
N = 10
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
seed = 100
N = 10
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:10, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10, ]
seed = 100
N = 10
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:10, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10]
seed = 100
N = 10
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:5, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10]
seed = 100
N = 10
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:5, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10]
seed = 100
N = 15
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:5, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10]
seed = 100
N = 20
set.seed(seed)
bwi <- MASS::mvrnorm(n = N, c(0, 0), matrix(c(0.5, 0.25, 0.25, 0.5), nrow = 2, ncol = 2),
tol = 1e-6, empirical = FALSE)
bwi[1:5, ]
##covariate
Z1 <- sample(c(0, 1), N, replace = TRUE, prob = c(0.5, 0.5))
Z1[1:10]
mdata <- a$mdata
mdataS <- a$mdataS
ydata <- a$vali.ydata
cdata <- a$vali.cdata
mdata <- a$mdata
mdataS <- a$mdataS
View(ydata)
table(ydata$ID)
57+18
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
a$TrueP1ik
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 200, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15)
time2 <- proc.time()
time2 - time1
a$TrueP1ik
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 200, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15,
u = seq(3, 7, by = 2))
time2 <- proc.time()
time2 - time1
a$TrueP1ik
time1 <- proc.time()
a <- simfitRI_DP.test(Nv = 100, seed = 100, increment = 0.25, CL = 2, CU = 10, quadpoint = 15,
u = seq(3, 7, by = 2))
time2 <- proc.time()
time2 - time1
a$TrueP1ik
install.packages("JM")
?JM::survfitJM()
devtools::load_all()
devtools::document()
?JMMLSM
require(JMH)
data(ydata)
data(cdata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time,
quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
