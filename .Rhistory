b - a
save.image("~/Desktop/GSR CODES/2022/2022 summer/JMH_Sim/Table1&2.RData")
data <- simJMdataRI(seed = 100, N =500, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
View(cdata)
cdata2 <- cdata[cdata$ID %in% c(98, 116), ]
ydata2 <- ydata[ydata$ID %in% c(98, 116), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 20, simulate = TRUE, quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 20, simulate = TRUE, quadpoint = 10)
survfit
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 20, simulate = TRUE, quadpoint = 10)
a <- c(1, 2, 3, 4, 5, 6)
a <- matrix(a, nrow = 2, ncol = 3)
a
a <- rbind(a, a)
a
a[1, ] <- NA
a
a <- a[complete.cases(a), ]
a
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP(sim = 500, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 500)
time2 <- proc.time()
time2 - time1
save(a, file = "~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/sim500Nt200Nq15M500.Rdata")
time1 <- proc.time()
a <- simfitRI_DP(sim = 500, Nv = 500, Nt = 200, seed = 100, increment = 0.5, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 500)
time2 <- proc.time()
time2 - time1
save(a, file = "~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/sim500Nt200Nq15M500.Rdata")
devtools::load_all()
load("~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/sim500Nt200Nq15M500Nv500Incre0.25.Rdata")
a$ParaMatrixRaw[[2]]$pred1$`1`
a$ParaMatrixRaw[[2]]$pred1$`3`
source("~/Desktop/GSR CODES/2022/2022 summer/Accord_DP/GetBiasCP_DP.R")
HorizonTimePred <- GetBiasCP_DP(sim = 500, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
head(HorizonTimePred$`4`$Risk1$Bias)
head(HorizonTimePred$`4`$Risk1$CP)
head(HorizonTimePred$`4`$Risk1$CP, 20)
head(HorizonTimePred$`4`$Risk1$CP, 30)
head(HorizonTimePred$`4`$Risk1$SE, 30)
devtools::load_all()
devtools::load_all()
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
a$ParaMatrixRaw[[2]]$pred1$`1`
load("~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/sim500Nt200Nq15M500Incre0.25New.Rdata")
a$ParaMatrixRaw[[2]]$pred1$`1`
load("~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/sim500Nt200Nq15M500Nv500Incre0.25.Rdata")
a$ParaMatrixRaw[[2]]$pred1$`1`
devtools::load_all()
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$EFuntheta$FUNEC
test <- fit$EFuntheta$FUNEC
View(test)
data(cdata)
data(ydata)
devtools::load_all()
set.seed(1)
x <- runif(100)
x
hdquantile(x, (1:3)/4, se=TRUE)
install.packages("Hmisc")
library(Hmisc)
hdquantile(x, (1:3)/4, se=TRUE)
hdquantile(x, c(0.025, 0.975), se = FALSE)
quantile(x, probs = 0.975)
?hdquantile
devtools::document()
devtools::load_all()
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 20, simulate = TRUE,
quadpoint = 10)
survfit
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit$Pred$`714`$`Cumulative incidence probabilities for type 2 failure`
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
a = 2
b = 3
aa <- list(a1 = a, b1 = b)
aa$a1
as.matrix(c(1, 3, 4, 5))
is.matrix(fit$cdata)
fit$cdata[1, ]
fit$ydata[1, ]
as.matrix(fit$ydata[1, ])
a <- as.matrix(fit$ydata[1, ])
View(a)
fit$cdata[1, 3]
a <- fit$cdata[1, ]
a[, 3]
is.null(a[, 3])
is.numeric(a[, 3])
fit
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
fit$cdata
fit$ydata
devtools::load_all()
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$ydata
devtools::load_all()
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 500, simulate = TRUE,
quadpoint = 10)
devtools::load_all()
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
time2 <- proc.time()
time2 - time1
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
source("~/Desktop/GSR CODES/2022/2022 summer/Accord_DP/GetBiasCP_DP.R")
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.6, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95)
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
HorizonTimePred$`4`$Risk1$Bias
HorizonTimePred$`4`$Risk1$CP
a$ParaMatrixRaw[[1]]$pred1
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
devtools::load_all()
HorizonTimePred$`4`$Risk1$Bias
load("~/Desktop/GSR CODES/2022/2022 summer/JMH_DP/oldresult/sim500Nt200Nq15M500Nv500Incre0.25.Rdata")
source("~/Desktop/GSR CODES/2022/2022 summer/Accord_DP/GetBiasCP_DP.R")
HorizonTimePred <- GetBiasCP_DP(sim = 500, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
HorizonTimePred$`4`$Risk1$Bias[1:10]
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
a$TrueP1ik
a$ParaMatrixRaw[[2]]$pred1$`1`
a$ParaMatrixRaw[[2]]$pred1$`14`
a$ParaMatrixRaw[[2]]$pred1$`37`
a$ParaMatrixRaw[[2]]$pred1$`1`
data <- simJMdataRI(seed = 100, N =500, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$cdata
fit$ydata
devtools::load_all()
View(ydata)
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
fit$ydata[1:20, ]
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(2.5, 4.5, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit$Pred$`714`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 2 failure`
View(cdata2)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit$Pred$`714`$`Cumulative incidence probabilities for type 1 failure`
survfit$Pred$`714`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 2 failure`
survfit$Pred$`817`$`Cumulative incidence probabilities for type 1 failure`
survfit
devtools::load_all()
survfit
devtools::load_all()
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
devtools::load_all()
time1 <- proc.time()
a <- simfitRI_DP(sim = 50, Nv = 500, Nt = 200, seed = 100, increment = 0.25, CL = 2, CU = 10,
u = seq(3, 7, by = 1), quadpoint = 15, ncores = 11, M = 100)
time2 <- proc.time()
time2 - time1
a$TrueP1ik[1:20, ]
a$TrueP1ik[1:5, ]
a$ParaMatrixRaw[[2]]$pred1$`1`
a$ParaMatrixRaw[[2]]$pred1$`3`
a$ParaMatrixRaw[[2]]$pred1$`8`
HorizonTimePred <- GetBiasCP_DP(sim = 50, u = seq(3, 7, by = 1),
P1us = a$TrueP1ik, P2us = a$TrueP2ik, ParaMatrixRaw = a$ParaMatrixRaw)
HorizonTimePred$`4`$Risk1$Bias
TotalData <- NULL
u <- seq(3, 7, by = 1)
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk1$Bias, HorizonTimePred[[i]]$Risk1$SE,
HorizonTimePred[[i]]$Risk1$CP, 1)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
for (i in 1:length(HorizonTimePred)) {
subData <- data.frame(u[i+1], HorizonTimePred[[i]]$Risk2$Bias, HorizonTimePred[[i]]$Risk2$SE,
HorizonTimePred[[i]]$Risk2$CP, 2)
colnames(subData) <- c("HorizonTime", "Bias", "SE", "CP", "FailureType")
TotalData <- rbind(TotalData, subData)
}
TotalData$HorizonTime <- as.factor(TotalData$HorizonTime)
TotalData$FailureType <- as.factor(TotalData$FailureType)
library(ggplot2)
library(ggpubr)
a1 <- ggplot(TotalData, aes(x = FailureType, y = Bias, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a2 <- ggplot(TotalData, aes(x = FailureType, y = SE, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA)
a3 <- ggplot(TotalData, aes(x = FailureType, y = CP, fill = HorizonTime)) +
geom_boxplot(outlier.shape = NA) +
geom_hline(yintercept = 0.95) +
coord_cartesian(ylim = c(0.5, 1))
ggarrange(a1, a2, a3, labels = c("A", "B", "C"),
ncol = 3, nrow = 1, legend = "bottom",
common.legend = TRUE)
devtools::load_all()
devtools::load_all()
data <- simJMdataRI(seed = 100, N =500, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
devtools::load_all()
install.packages("devtools")
devtools::load_all()
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
data(cdata)
data(ydata)
data <- simJMdataRI(seed = 100, N =200, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
data <- simJMdataRI(seed = 100, N =1000, increment = 0.5, lambda2 = 0.1)
ydata <- data$ydata
cdata <- data$cdata
fit <- JMMLSM(cdata = cdata, ydata = ydata,
long.formula = Y ~ Z1 + Z2 + Z3 + time,
surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
variance.formula = ~ Z1 + Z2 + Z3 + time, maxiter = 1000, epsilon = 1e-04,
quadpoint = 10, random = ~ 1|ID, print.para = TRUE)
fit$EFuntheta$FUNEC
cdata2 <- cdata[cdata$ID %in% c(714, 817), ]
ydata2 <- ydata[ydata$ID %in% c(714, 817), ]
View(cdata2)
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
devtools::load_all()
survfit2 <- survfit2JMMLSM(fit, seed = 100, ynewdata = ydata2, cnewdata = cdata2,
u = seq(3, 7, by = 1), M = 100, simulate = TRUE,
quadpoint = 15)
survfit2
View(fit)
