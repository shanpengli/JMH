% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JMMLSM.R
\name{JMMLSM}
\alias{JMMLSM}
\title{Joint Modelling for Continuous outcomes}
\usage{
JMMLSM(
  cdata,
  ydata,
  long.formula,
  surv.formula,
  variance.formula,
  random,
  maxiter = 1000,
  epsilon = 1e-04,
  quadpoint = 10,
  print.para = FALSE,
  survinitial = TRUE
)
}
\arguments{
\item{cdata}{a survival data frame with competing risks or single failure.
Each subject has one data entry.}

\item{ydata}{a longitudinal data frame in long format.}

\item{long.formula}{a formula object with the response variable and fixed effects covariates
to be included in the longitudinal sub-model.}

\item{surv.formula}{a formula object with the survival time, event indicator, and the covariates
to be included in the survival sub-model.}

\item{variance.formula}{an one-sided formula object with the fixed effects covariates to model the variance of longituidnal sub-model.}

\item{random}{a one-sided formula object describing the random effects part of the longitudinal sub-model.
For example, fitting a random intercept model takes the form ~ 1|ID.
Alternatively. Fitting a random intercept and slope model takes the form ~ x1 + ... + xn|ID.}

\item{maxiter}{the maximum number of iterations of the EM algorithm that the function will perform. Default is 10000.}

\item{epsilon}{Tolerance parameter. Default is 0.0001.}

\item{quadpoint}{the number of pseudo-adaptive Gauss-Hermite quadrature points
to be chosen for numerical integration. Default is 6 which produces stable estimates in most dataframes.}

\item{print.para}{Print detailed information of each iteration. Default is FALSE, i.e., not to print the iteration details.}

\item{survinitial}{Fit a Cox model to obtain initial values of the parameter estimates. Default is TRUE.}
}
\description{
Joint modeling of longitudinal continuous data and competing risks
}
\examples{
require(JMH)
data(ydata)
data(cdata)
fit <- JMMLSM(cdata = cdata, ydata = ydata, 
              long.formula = Y ~ Z1 + Z2 + Z3 + time,
              surv.formula = Surv(survtime, cmprsk) ~ var1 + var2 + var3,
              variance.formula = ~ Z1 + Z2 + Z3 + time, 
              quadpoint = 15, random = ~ 1|ID, print.para = TRUE)
fit    
cnewdata <- cdata[cdata$ID \%in\% c(122, 952), ]
ynewdata <- ydata[ydata$ID \%in\% c(122, 952), ]
survfit <- survfit2JMMLSM(fit, seed = 100, ynewdata = ynewdata, cnewdata = cnewdata, 
                     u = seq(5.2, 7.2, by = 0.5), M = 100, simulate = TRUE, quadpoint = 10)
oldpar <- par(mfrow = c(2, 2), mar = c(5, 4, 4, 4))
plot(survfit, estimator = "both", include.y = TRUE)
par(oldpar)
par(oldpar)
}
